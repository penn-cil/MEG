<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>hbm_0</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>HBM_REF_CLK_0</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>HBM_REF_CLK_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_0.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_0.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_0.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_0.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_0.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_0.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>HBM_REF_CLK_1</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>HBM_REF_CLK_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_1.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_1.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_1.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_1.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_1.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.HBM_REF_CLK_1.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.HBM_REF_CLK_1" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_00</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_00.ASSOCIATED_BUSIF">SAXI_00</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_00.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_00.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_00.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_00.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_00.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_00" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_00_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_00_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_00_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_00_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_00</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_00"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_00_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_00.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_00.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_00" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_01</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_01.ASSOCIATED_BUSIF">SAXI_01</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_01.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_01.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_01.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_01.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_01.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_01" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_01_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_01_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_01_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_01_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_01</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_01"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_01_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_01.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_01.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_01" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_02</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_02.ASSOCIATED_BUSIF">SAXI_02</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_02.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_02.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_02.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_02.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_02.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_02" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_02_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_02_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_02_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_02_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_02</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_02"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_02_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_02.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_02.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_02" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_03</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_03.ASSOCIATED_BUSIF">SAXI_03</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_03.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_03.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_03.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_03.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_03.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_03" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_03_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_03_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_03_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_03_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_03</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_03"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_03_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_03.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_03.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_03" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_04</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_04.ASSOCIATED_BUSIF">SAXI_04</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_04.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_04.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_04.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_04.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_04.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_04" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_04_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_04_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_04_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_04_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_04</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_04"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_04_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_04.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_04.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_04" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_05</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_05.ASSOCIATED_BUSIF">SAXI_05</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_05.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_05.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_05.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_05.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_05.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_05" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_05_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_05_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_05_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_05_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_05</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_05"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_05_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_05.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_05.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_05" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_06</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_06.ASSOCIATED_BUSIF">SAXI_06</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_06.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_06.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_06.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_06.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_06.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_06" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_06_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_06_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_06_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_06_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_06</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_06"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_06_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_06.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_06.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_06" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_07</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_07.ASSOCIATED_BUSIF">SAXI_07</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_07.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_07.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_07.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_07.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_07.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_07" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_07_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_07_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_07_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_07_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_07</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_07"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_07_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_07.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_07.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_07" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_08</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_08.ASSOCIATED_BUSIF">SAXI_08</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_08.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_08.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_08.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_08.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_08.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_08" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_08_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_08_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_08_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_08_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_08</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_08"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_08_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_08.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_08.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_08" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_09</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_09.ASSOCIATED_BUSIF">SAXI_09</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_09.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_09.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_09.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_09.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_09.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_09" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_09_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_09_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_09_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_09_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_09</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_09"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_09_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_09.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_09.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_09" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_10</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_10.ASSOCIATED_BUSIF">SAXI_10</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_10.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_10.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_10.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_10.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_10.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_10" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_10_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_10_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_10_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_10_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_10</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_10"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_10_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_10.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_10.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_10" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_11</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_11.ASSOCIATED_BUSIF">SAXI_11</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_11.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_11.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_11.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_11.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_11.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_11" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_11_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_11_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_11_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_11_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_11</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_11"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_11_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_11.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_11.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_11" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_12</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_12.ASSOCIATED_BUSIF">SAXI_12</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_12.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_12.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_12.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_12.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_12.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_12" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_12_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_12_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_12_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_12_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_12</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_12"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_12_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_12.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_12.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_12" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_13</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_13.ASSOCIATED_BUSIF">SAXI_13</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_13.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_13.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_13.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_13.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_13.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_13" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_13_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_13_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_13_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_13_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_13</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_13"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_13_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_13.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_13.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_13" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_14</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_14.ASSOCIATED_BUSIF">SAXI_14</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_14.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_14.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_14.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_14.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_14.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_14" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_14_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_14_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_14_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_14_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_14</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_14"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_14_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_14.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_14.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_14" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_15</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_15.ASSOCIATED_BUSIF">SAXI_15</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_15.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_15.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_15.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_15.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_15.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_15" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_15_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_15_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_15_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_15_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_15</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_15"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_15_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.DATA_WIDTH">256</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.PROTOCOL">AXI3</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.ID_WIDTH">6</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.ADDR_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_WSTRB">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_BRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.HAS_RRESP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.SUPPORTS_NARROW_BURST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.NUM_READ_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.NUM_WRITE_OUTSTANDING">2</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.MAX_BURST_LENGTH">16</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_15.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_15.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_15" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_16</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_16.ASSOCIATED_BUSIF">SAXI_16</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_16.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_16.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_16.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_16.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_16.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_16" xilinx:dependency="( ( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_16_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_16_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_16_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_16_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_16</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_16"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_16_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_16.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_16.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_17</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_17.ASSOCIATED_BUSIF">SAXI_17</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_17.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_17.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_17.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_17.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_17.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_17" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_17_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_17_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_17_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_17_N" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_17</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_17"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_17_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_17.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_17.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_17" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_18</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_18.ASSOCIATED_BUSIF">SAXI_18</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_18.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_18.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_18.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_18.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_18.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_18" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_18_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_18_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_18_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_18_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_18</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_18"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_18_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_18.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_18.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_18" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_19</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_19.ASSOCIATED_BUSIF">SAXI_19</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_19.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_19.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_19.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_19.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_19.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_19" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_19_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_19_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_19_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_19_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_19</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_19"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_19_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_19.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_19.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_20</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_20.ASSOCIATED_BUSIF">SAXI_20</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_20.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_20.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_20.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_20.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_20.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_20" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_20_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_20_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_20_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_20_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_20</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_20"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_20_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_20.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_20.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_20" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_21</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_21.ASSOCIATED_BUSIF">SAXI_21</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_21.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_21.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_21.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_21.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_21.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_21" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_21_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_21_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_21_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_21_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_21</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_21"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_21_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_21.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_21.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_21" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_22</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_22.ASSOCIATED_BUSIF">SAXI_22</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_22.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_22.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_22.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_22.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_22.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_22" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_22_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_22_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_22_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_22_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_22</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_22"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_22_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_22.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_22.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_22" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_23</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_23.ASSOCIATED_BUSIF">SAXI_23</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_23.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_23.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_23.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_23.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_23.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_23" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_23_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_23_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_23_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_23_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_23</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_23"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_23_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_23.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_23.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_23" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_24</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_24.ASSOCIATED_BUSIF">SAXI_24</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_24.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_24.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_24.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_24.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_24.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_24" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_24_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_24_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_24_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_24_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_24</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_24"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_24_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_24.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_24.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_24" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_25</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_25.ASSOCIATED_BUSIF">SAXI_25</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_25.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_25.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_25.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_25.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_25.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_25" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_25_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_25_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_25_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_25_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_25</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_25"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_25_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_25.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_25.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_25" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_26</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_26.ASSOCIATED_BUSIF">SAXI_26</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_26.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_26.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_26.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_26.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_26.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_26" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_26_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_26_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_26_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_26_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_26</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_26"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_26_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_26.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_26.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_26" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_27</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_27.ASSOCIATED_BUSIF">SAXI_27</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_27.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_27.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_27.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_27.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_27.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_27" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_27_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_27_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_27_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_27_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_27</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_27"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_27_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_27.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_27.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_27" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_28</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_28.ASSOCIATED_BUSIF">SAXI_28</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_28.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_28.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_28.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_28.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_28.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_28" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_28_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_28_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_28_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_28_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_28</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_28"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_28_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_28.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_28.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_28" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_29</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_29.ASSOCIATED_BUSIF">SAXI_29</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_29.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_29.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_29.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_29.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_29.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_29" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_29_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_29_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_29_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_29_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_29</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_29"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_29_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_29.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_29.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_29" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_30</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_30.ASSOCIATED_BUSIF">SAXI_30</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_30.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_30.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_30.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_30.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_30.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_30" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_30_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_30_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_30_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_30_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_30</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_30"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_30_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_30.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_30.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_30" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ACLK_31</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ACLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ACLK_31.ASSOCIATED_BUSIF">SAXI_31</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_31.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_31.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_31.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.ACLK_31.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ACLK_31.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ACLK_31" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>ARST_31_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.ARST_31_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.ARST_31_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.ARST_31_N" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAXI_31</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="aximm_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAXI_31"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ARVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_ARVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_AWADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWBURST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_AWBURST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_AWID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWLEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_AWLEN</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_AWREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWSIZE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_AWSIZE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>AWVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_AWVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_BID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_BREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_BRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_BVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_RDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_RID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_RLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_RREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RRESP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_RRESP</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_RVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_WDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_WLAST</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_WREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WSTRB</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_WSTRB</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>AXI_31_WVALID</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>DATA_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.DATA_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PROTOCOL</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.PROTOCOL">AXI4LITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.ID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDR_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.ADDR_WIDTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AWUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.AWUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ARUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.ARUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.WUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.RUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>BUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.BUSER_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>READ_WRITE_MODE</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.READ_WRITE_MODE">READ_WRITE</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_LOCK</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_LOCK">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_PROT</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_PROT">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_CACHE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_CACHE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_QOS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_QOS">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_REGION</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_REGION">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_WSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_WSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_BRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_BRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_RRESP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.HAS_RRESP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>SUPPORTS_NARROW_BURST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.SUPPORTS_NARROW_BURST">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.NUM_READ_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_OUTSTANDING</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.NUM_WRITE_OUTSTANDING">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>MAX_BURST_LENGTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.MAX_BURST_LENGTH">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_READ_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.NUM_READ_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>NUM_WRITE_THREADS</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.NUM_WRITE_THREADS">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>RUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.RUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>WUSER_BITS_PER_BYTE</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.SAXI_31.WUSER_BITS_PER_BYTE">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.SAXI_31.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAXI_31" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>PCLK_0</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PCLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.PCLK_0.ASSOCIATED_BUSIF">SAPB_0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_0.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_0.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_0.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_0.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.PCLK_0.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>PRST_0_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PRESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.PRST_0_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.PRST_0_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAPB_0</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="apb" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="apb_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAPB_0"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PENABLE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PENABLE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PRDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PRDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PSEL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PSEL</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PSLVERR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PSLVERR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PWDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PWDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PWRITE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_0_PWRITE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>PCLK_1</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PCLK</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.PCLK_1.ASSOCIATED_BUSIF">SAPB_1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_1.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_1.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_1.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.PCLK_1.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.PCLK_1.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.PCLK_1" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>PRST_1_N</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PRESET_N</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.PRST_1_N.POLARITY">ACTIVE_LOW</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.PRST_1_N.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.PRST_1_N" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>SAPB_1</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="apb" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="apb_rtl" spirit:version="1.0"/>
      <spirit:slave>
        <spirit:memoryMapRef spirit:memoryMapRef="SAPB_1"/>
      </spirit:slave>
      <spirit:connectionRequired>true</spirit:connectionRequired>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PADDR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PENABLE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PENABLE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PRDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PRDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PREADY</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PSEL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PSEL</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PSLVERR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PSLVERR</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PWDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PWDATA</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PWRITE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>APB_1_PWRITE</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.SAPB_1" xilinx:dependency="( spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:memoryMaps>
    <spirit:memoryMap>
      <spirit:name>SAPB_0</spirit:name>
      <spirit:addressBlock>
        <spirit:name>Reg</spirit:name>
        <spirit:baseAddress spirit:format="long">0</spirit:baseAddress>
        <spirit:range spirit:format="long">4M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:access>read-write</spirit:access>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAPB_1</spirit:name>
      <spirit:addressBlock>
        <spirit:name>Reg</spirit:name>
        <spirit:baseAddress spirit:format="long">0</spirit:baseAddress>
        <spirit:range spirit:format="long">4M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:access>read-write</spirit:access>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_00</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_00.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_01</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_01.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_02</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_02.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_03</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_03.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_04</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_04.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_05</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_05.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_06</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_06.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_07</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_07.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_08</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_08.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_09</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_09.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_10</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_10.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_11</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_11.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_12</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_12.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_13</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_13.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_14</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_14.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_15</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_15.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_16</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_16.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_17</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_17.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_18</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_18.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_19</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_19.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_20</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_20.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_21</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_21.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_22</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_22.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_23</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_23.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_24</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_24.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_25</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_25.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_26</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_26.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_27</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_27.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_28</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_28.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_29</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_29.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_30</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_30.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
    <spirit:memoryMap>
      <spirit:name>SAXI_31</spirit:name>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM00</spirit:name>
        <spirit:baseAddress spirit:format="long">0x000000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM00" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM01</spirit:name>
        <spirit:baseAddress spirit:format="long">0x010000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM01" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_00&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM02</spirit:name>
        <spirit:baseAddress spirit:format="long">0x020000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM02" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM03</spirit:name>
        <spirit:baseAddress spirit:format="long">0x030000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM03" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_01&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM04</spirit:name>
        <spirit:baseAddress spirit:format="long">0x040000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM04" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM05</spirit:name>
        <spirit:baseAddress spirit:format="long">0x050000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM05" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_02&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM06</spirit:name>
        <spirit:baseAddress spirit:format="long">0x060000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM06" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM07</spirit:name>
        <spirit:baseAddress spirit:format="long">0x070000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM07" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_03&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM08</spirit:name>
        <spirit:baseAddress spirit:format="long">0x080000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM08" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM09</spirit:name>
        <spirit:baseAddress spirit:format="long">0x090000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM09" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_04&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM10</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM10" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM11</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM11" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_05&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM12</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM12" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM13</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM13" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_06&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM14</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM14" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM15</spirit:name>
        <spirit:baseAddress spirit:format="long">0x0F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM15" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_07&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM16</spirit:name>
        <spirit:baseAddress spirit:format="long">0x100000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM17</spirit:name>
        <spirit:baseAddress spirit:format="long">0x110000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_08&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM18</spirit:name>
        <spirit:baseAddress spirit:format="long">0x120000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM19</spirit:name>
        <spirit:baseAddress spirit:format="long">0x130000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_09&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM20</spirit:name>
        <spirit:baseAddress spirit:format="long">0x140000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM21</spirit:name>
        <spirit:baseAddress spirit:format="long">0x150000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_10&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM22</spirit:name>
        <spirit:baseAddress spirit:format="long">0x160000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM23</spirit:name>
        <spirit:baseAddress spirit:format="long">0x170000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_11&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM24</spirit:name>
        <spirit:baseAddress spirit:format="long">0x180000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM25</spirit:name>
        <spirit:baseAddress spirit:format="long">0x190000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_12&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM26</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1A0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM27</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1B0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_13&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM28</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1C0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM29</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1D0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_14&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM30</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1E0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
      <spirit:addressBlock>
        <spirit:name>HBM_MEM31</spirit:name>
        <spirit:baseAddress spirit:format="long">0x1F0000000</spirit:baseAddress>
        <spirit:range spirit:format="long">256M</spirit:range>
        <spirit:width spirit:format="long">0</spirit:width>
        <spirit:usage>memory</spirit:usage>
        <spirit:access>read-write</spirit:access>
        <spirit:vendorExtensions>
          <xilinx:addressBlockInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="ADDRBLOCK_ENABLEMENT.SAXI_31.HBM_MEM31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_MC_ENABLE_15&apos;)) = &quot;TRUE&quot;)  &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:addressBlockInfo>
        </spirit:vendorExtensions>
      </spirit:addressBlock>
    </spirit:memoryMap>
  </spirit:memoryMaps>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_veriloginstantiationtemplate</spirit:name>
        <spirit:displayName>Verilog Instantiation Template</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis.template</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_veriloginstantiationtemplate_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Mon Nov 11 19:10:23 UTC 2019</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:55df5135</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsynthesis</spirit:name>
        <spirit:displayName>Verilog Synthesis</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>hbm_v1_0_3</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Mon Nov 11 19:11:08 UTC 2019</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:55df5135</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_synthesisconstraints</spirit:name>
        <spirit:displayName>Synthesis Constraints</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis.constraints</spirit:envIdentifier>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:55df5135</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsynthesiswrapper</spirit:name>
        <spirit:displayName>Verilog Synthesis Wrapper</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis.wrapper</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>hbm_0</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsynthesiswrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Mon Nov 11 19:11:08 UTC 2019</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:55df5135</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_externalfiles</spirit:name>
        <spirit:displayName>External Files</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:external.files</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_externalfiles_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sat Nov 23 00:02:15 UTC 2019</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:55df5135</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>HBM_REF_CLK_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>HBM_REF_CLK_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.HBM_REF_CLK_1" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_ARADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_AWADDR" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_WDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_WDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ACLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ACLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ARESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_ARADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ARBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ARID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ARLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ARSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ARVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_AWADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_AXI_ADDR_SIZE&apos;)))">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_AWADDR" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_AWBURST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_AWBURST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_AWID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_AWID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_AWLEN</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_AWLEN">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_AWSIZE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_AWSIZE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_AWVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_AWVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_RREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_RREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_BREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_BREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_WDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_WDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_WLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_WLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_WSTRB</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_WSTRB">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_WDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_WDATA_PARITY" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_WVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_WVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PWDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">21</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PCLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PENABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PRESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PSEL</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PWRITE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PWDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PWDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PADDR</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">21</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PADDR">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PCLK</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PCLK">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PENABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PENABLE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PRESET_N</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PRESET_N">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PSEL</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PSEL">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PWRITE</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PWRITE">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_00_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_00_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_00&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_01_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_01_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_01&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_02_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_02_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_02&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_03_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_03_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_03&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_04_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_04_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_04&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_05_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_05_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_05&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_06_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_06_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_06&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_07_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_07_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_07&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_08_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_08_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_08&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_09_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_09_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_09&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_10_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_10_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_10&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_11_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_11_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_11&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_12_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_12_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_12&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_13_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_13_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_13&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_14_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_14_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_14&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_RDATA_PARITY" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_15_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_15_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_15&apos;)) = true ) &amp;&amp;  (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_16_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_16_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_16_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_16&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_17_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_17_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_17_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_17&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_18_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_18_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_18_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_18&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_19_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_19_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_19_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_19&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_20_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_20_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_20_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_20&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_21_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_21_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_21_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_21&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_22_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_22_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_22_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_22&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_23_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_23_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_23_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_23&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_24_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_24_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_24_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_24&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_25_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_25_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_25_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_25&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_26_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_26_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_26_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_26&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_27_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_27_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_27_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_27&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_28_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_28_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_28_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_28&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_RDATA_PARITY" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_29_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_29_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_29_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_29&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_RDATA_PARITY" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_30_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_MC_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_MC_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_30_PHY_STATUS</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_30_PHY_STATUS" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_30&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_ARREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_ARREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_AWREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_AWREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_RDATA_PARITY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_RDATA_PARITY" xilinx:dependency="(( spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_RDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_RDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_RID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_RID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_RLAST</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_RLAST">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_RRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_RRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_RVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_RVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_WREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_WREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_BID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_BID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_BRESP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_BRESP">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_BVALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.AXI_31_BVALID">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_AW_AERR_N</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_AW_AERR_N" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_CLK_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_CLK_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_DBI_BYTE_DISABLE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_DBI_BYTE_DISABLE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_DW_RDDATA_DBI</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">20</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_DW_RDDATA_DBI" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_DW_RDDATA_DERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_DW_RDDATA_DERR" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_DW_RDDATA_VALID</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_DW_RDDATA_VALID" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_INIT_COMPLETE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_INIT_COMPLETE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_PHYUPD_REQ</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_PHYUPD_REQ" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_PHY_LP_STATE</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_PHY_LP_STATE" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>AXI_31_DFI_RST_N_BUF</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.AXI_31_DFI_RST_N_BUF" xilinx:dependency="( (spirit:decode(id(&apos;PARAM_VALUE.USER_SAXI_31&apos;)) = true ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_EN_VNC&apos;)) = &quot;TRUE&quot; ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PRDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_0_PSLVERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PRDATA</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PRDATA">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PREADY</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PREADY">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>APB_1_PSLVERR</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:id="PORT_ENABLEMENT.APB_1_PSLVERR">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>apb_complete_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>apb_complete_1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.apb_complete_1" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sl_iport0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent">36</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.sl_iport0" xilinx:dependency="( ( spirit:decode(id(&apos;PARAM_VALUE.USER_XSDB_EN&apos;)) = TRUE ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 1 ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sl_oport0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">16</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.sl_oport0" xilinx:dependency="( ( spirit:decode(id(&apos;PARAM_VALUE.USER_XSDB_EN&apos;)) = TRUE ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 1 ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sl_iport1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">36</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.sl_iport1" xilinx:dependency="( ( spirit:decode(id(&apos;PARAM_VALUE.USER_XSDB_EN&apos;)) = TRUE ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sl_oport1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">16</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.sl_oport1" xilinx:dependency="( ( spirit:decode(id(&apos;PARAM_VALUE.USER_XSDB_EN&apos;)) = TRUE ) &amp;&amp; (spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 ) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>DRAM_0_STAT_CATTRIP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>DRAM_0_STAT_TEMP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">6</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>DRAM_1_STAT_CATTRIP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.DRAM_1_STAT_CATTRIP" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>DRAM_1_STAT_TEMP</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">6</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.DRAM_1_STAT_TEMP" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.USER_HBM_STACK&apos;)) = 2 )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="integer">
        <spirit:name>HBM_STACK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.HBM_STACK">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>SWITCH_ENABLE_00</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SWITCH_ENABLE_00">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>SWITCH_ENABLE_01</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SWITCH_ENABLE_01">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>INIT_BYPASS</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.INIT_BYPASS">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI_RST_ASSERT_WIDTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI_RST_ASSERT_WIDTH">16</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI_RST_DEASSERT_WIDTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI_RST_DEASSERT_WIDTH">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TEMP_WAIT_PERIOD_0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TEMP_WAIT_PERIOD_0">100000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TEMP_WAIT_PERIOD_1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TEMP_WAIT_PERIOD_1">100000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>SWITCH_EN_0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SWITCH_EN_0">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>SWITCH_EN_1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SWITCH_EN_1">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI_CLK_FREQ</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI_CLK_FREQ">450</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXI_CLK1_FREQ</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXI_CLK1_FREQ">450</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>HBM_REF_CLK_FREQ_0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.HBM_REF_CLK_FREQ_0">100</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>HBM_REF_CLK_FREQ_1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.HBM_REF_CLK_FREQ_1">100</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>HBM_CLK_FREQ_0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.HBM_CLK_FREQ_0">900</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>HBM_CLK_FREQ_1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.HBM_CLK_FREQ_1">900</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>HBM_STACK_NUM</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.HBM_STACK_NUM">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_00</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_00">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_01</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_01">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_02</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_02">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_03</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_03">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_04</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_04">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_05</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_05">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_06</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_06">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_07</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_07">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_08</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_08">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_09</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_09">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_10</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_10">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_11</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_11">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_12</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_12">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_13</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_13">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_14</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_14">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_15</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_15">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_16</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_16">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_17</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_17">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_18</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_18">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_19</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_19">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_20</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_20">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_21</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_21">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_22</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_22">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_23</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_23">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_24</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_24">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_25</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_25">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_26</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_26">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_27</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_27">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_28</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_28">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_29</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_29">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_30</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_30">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CLK_SEL_31</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CLK_SEL_31">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>DATARATE_STACK_0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DATARATE_STACK_0">1800</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>DATARATE_STACK_1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DATARATE_STACK_1">1800</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_00</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_00">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_01</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_01">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_02</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_02">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_03</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_03">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_04</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_04">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_05</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_05">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_06</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_06">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_07</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_07">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_08</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_08">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_09</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_09">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_10</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_10">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_11</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_11">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_12</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_12">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_13</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_13">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_14</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_14">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_15</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_15">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_16</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_16">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_17</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_17">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_18</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_18">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_19</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_19">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_20</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_20">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_21</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_21">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_22</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_22">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_23</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_23">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_24</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_24">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_25</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_25">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_26</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_26">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_27</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_27">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_28</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_28">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_29</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_29">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_30</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_30">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>READ_PERCENT_31</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.READ_PERCENT_31">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_00</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_00">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_01</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_01">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_02</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_02">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_03</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_03">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_04</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_04">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_05</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_05">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_06</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_06">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_07</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_07">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_08</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_08">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_09</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_09">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_10</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_10">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_11</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_11">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_12</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_12">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_13</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_13">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_14</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_14">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_15</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_15">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_16</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_16">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_17</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_17">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_18</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_18">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_19</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_19">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_20</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_20">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_21</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_21">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_22</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_22">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_23</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_23">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_24</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_24">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_25</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_25">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_26</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_26">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_27</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_27">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_28</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_28">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_29</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_29">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_30</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_30">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>WRITE_PERCENT_31</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WRITE_PERCENT_31">40</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PAGEHIT_PERCENT_00</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PAGEHIT_PERCENT_00">75</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PAGEHIT_PERCENT_01</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PAGEHIT_PERCENT_01">75</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_00</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_00">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_01</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_01">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_02</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_02">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_03</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_03">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_04</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_04">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_05</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_05">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_06</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_06">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_07</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_07">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_08</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_08">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_09</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_09">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_10</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_10">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_11</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_11">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_12</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_12">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_13</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_13">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_14</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_14">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_15</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_15">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_APB_00</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_APB_00">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MC_ENABLE_APB_01</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MC_ENABLE_APB_01">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_00</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_00">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_01</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_01">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_02</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_02">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_03</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_03">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_04</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_04">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_05</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_05">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_06</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_06">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_07</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_07">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_08</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_08">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_09</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_09">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_10</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_10">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_11</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_11">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_12</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_12">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_13</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_13">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_14</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_14">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_15</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_15">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_16</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_16">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_17</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_17">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_18</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_18">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_19</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_19">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_20</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_20">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_21</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_21">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_22</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_22">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_23</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_23">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_24</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_24">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_25</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_25">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_26</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_26">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_27</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_27">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_28</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_28">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_29</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_29">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_30</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_30">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_31</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_31">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_APB_00</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_APB_00">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PHY_ENABLE_APB_01</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PHY_ENABLE_APB_01">FALSE</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choice_list_09f2b396</spirit:name>
      <spirit:enumeration>NON_SYNTHESIZABLE</spirit:enumeration>
      <spirit:enumeration>SYNTHESIZABLE</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_0da07c0e</spirit:name>
      <spirit:enumeration>ROW_BANK_COLUMN</spirit:enumeration>
      <spirit:enumeration>ROW_COLUMN_BANK</spirit:enumeration>
      <spirit:enumeration>BANK_ROW_COLUMN</spirit:enumeration>
      <spirit:enumeration>14R-2BA-1BG-5C-1BG</spirit:enumeration>
      <spirit:enumeration>2BA-14R-1BG-5C-1BG</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_153d9765</spirit:name>
      <spirit:enumeration>4GB</spirit:enumeration>
      <spirit:enumeration>8GB</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_30725cf7</spirit:name>
      <spirit:enumeration>LEFT</spirit:enumeration>
      <spirit:enumeration>RIGHT</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_4e874127</spirit:name>
      <spirit:enumeration>100</spirit:enumeration>
      <spirit:enumeration>101</spirit:enumeration>
      <spirit:enumeration>102</spirit:enumeration>
      <spirit:enumeration>103</spirit:enumeration>
      <spirit:enumeration>104</spirit:enumeration>
      <spirit:enumeration>105</spirit:enumeration>
      <spirit:enumeration>106</spirit:enumeration>
      <spirit:enumeration>107</spirit:enumeration>
      <spirit:enumeration>108</spirit:enumeration>
      <spirit:enumeration>109</spirit:enumeration>
      <spirit:enumeration>110</spirit:enumeration>
      <spirit:enumeration>111</spirit:enumeration>
      <spirit:enumeration>112</spirit:enumeration>
      <spirit:enumeration>113</spirit:enumeration>
      <spirit:enumeration>114</spirit:enumeration>
      <spirit:enumeration>115</spirit:enumeration>
      <spirit:enumeration>116</spirit:enumeration>
      <spirit:enumeration>117</spirit:enumeration>
      <spirit:enumeration>118</spirit:enumeration>
      <spirit:enumeration>119</spirit:enumeration>
      <spirit:enumeration>120</spirit:enumeration>
      <spirit:enumeration>121</spirit:enumeration>
      <spirit:enumeration>122</spirit:enumeration>
      <spirit:enumeration>123</spirit:enumeration>
      <spirit:enumeration>124</spirit:enumeration>
      <spirit:enumeration>125</spirit:enumeration>
      <spirit:enumeration>126</spirit:enumeration>
      <spirit:enumeration>127</spirit:enumeration>
      <spirit:enumeration>128</spirit:enumeration>
      <spirit:enumeration>129</spirit:enumeration>
      <spirit:enumeration>130</spirit:enumeration>
      <spirit:enumeration>131</spirit:enumeration>
      <spirit:enumeration>132</spirit:enumeration>
      <spirit:enumeration>133</spirit:enumeration>
      <spirit:enumeration>134</spirit:enumeration>
      <spirit:enumeration>135</spirit:enumeration>
      <spirit:enumeration>136</spirit:enumeration>
      <spirit:enumeration>137</spirit:enumeration>
      <spirit:enumeration>138</spirit:enumeration>
      <spirit:enumeration>139</spirit:enumeration>
      <spirit:enumeration>140</spirit:enumeration>
      <spirit:enumeration>141</spirit:enumeration>
      <spirit:enumeration>142</spirit:enumeration>
      <spirit:enumeration>143</spirit:enumeration>
      <spirit:enumeration>144</spirit:enumeration>
      <spirit:enumeration>145</spirit:enumeration>
      <spirit:enumeration>146</spirit:enumeration>
      <spirit:enumeration>147</spirit:enumeration>
      <spirit:enumeration>148</spirit:enumeration>
      <spirit:enumeration>149</spirit:enumeration>
      <spirit:enumeration>150</spirit:enumeration>
      <spirit:enumeration>151</spirit:enumeration>
      <spirit:enumeration>152</spirit:enumeration>
      <spirit:enumeration>153</spirit:enumeration>
      <spirit:enumeration>154</spirit:enumeration>
      <spirit:enumeration>155</spirit:enumeration>
      <spirit:enumeration>156</spirit:enumeration>
      <spirit:enumeration>157</spirit:enumeration>
      <spirit:enumeration>158</spirit:enumeration>
      <spirit:enumeration>159</spirit:enumeration>
      <spirit:enumeration>160</spirit:enumeration>
      <spirit:enumeration>161</spirit:enumeration>
      <spirit:enumeration>162</spirit:enumeration>
      <spirit:enumeration>163</spirit:enumeration>
      <spirit:enumeration>164</spirit:enumeration>
      <spirit:enumeration>165</spirit:enumeration>
      <spirit:enumeration>166</spirit:enumeration>
      <spirit:enumeration>167</spirit:enumeration>
      <spirit:enumeration>168</spirit:enumeration>
      <spirit:enumeration>169</spirit:enumeration>
      <spirit:enumeration>170</spirit:enumeration>
      <spirit:enumeration>171</spirit:enumeration>
      <spirit:enumeration>172</spirit:enumeration>
      <spirit:enumeration>173</spirit:enumeration>
      <spirit:enumeration>174</spirit:enumeration>
      <spirit:enumeration>175</spirit:enumeration>
      <spirit:enumeration>176</spirit:enumeration>
      <spirit:enumeration>177</spirit:enumeration>
      <spirit:enumeration>178</spirit:enumeration>
      <spirit:enumeration>179</spirit:enumeration>
      <spirit:enumeration>180</spirit:enumeration>
      <spirit:enumeration>181</spirit:enumeration>
      <spirit:enumeration>182</spirit:enumeration>
      <spirit:enumeration>183</spirit:enumeration>
      <spirit:enumeration>184</spirit:enumeration>
      <spirit:enumeration>185</spirit:enumeration>
      <spirit:enumeration>186</spirit:enumeration>
      <spirit:enumeration>187</spirit:enumeration>
      <spirit:enumeration>188</spirit:enumeration>
      <spirit:enumeration>189</spirit:enumeration>
      <spirit:enumeration>190</spirit:enumeration>
      <spirit:enumeration>191</spirit:enumeration>
      <spirit:enumeration>192</spirit:enumeration>
      <spirit:enumeration>193</spirit:enumeration>
      <spirit:enumeration>194</spirit:enumeration>
      <spirit:enumeration>195</spirit:enumeration>
      <spirit:enumeration>196</spirit:enumeration>
      <spirit:enumeration>197</spirit:enumeration>
      <spirit:enumeration>198</spirit:enumeration>
      <spirit:enumeration>199</spirit:enumeration>
      <spirit:enumeration>200</spirit:enumeration>
      <spirit:enumeration>201</spirit:enumeration>
      <spirit:enumeration>202</spirit:enumeration>
      <spirit:enumeration>203</spirit:enumeration>
      <spirit:enumeration>204</spirit:enumeration>
      <spirit:enumeration>205</spirit:enumeration>
      <spirit:enumeration>206</spirit:enumeration>
      <spirit:enumeration>207</spirit:enumeration>
      <spirit:enumeration>208</spirit:enumeration>
      <spirit:enumeration>209</spirit:enumeration>
      <spirit:enumeration>210</spirit:enumeration>
      <spirit:enumeration>211</spirit:enumeration>
      <spirit:enumeration>212</spirit:enumeration>
      <spirit:enumeration>213</spirit:enumeration>
      <spirit:enumeration>214</spirit:enumeration>
      <spirit:enumeration>215</spirit:enumeration>
      <spirit:enumeration>216</spirit:enumeration>
      <spirit:enumeration>217</spirit:enumeration>
      <spirit:enumeration>218</spirit:enumeration>
      <spirit:enumeration>219</spirit:enumeration>
      <spirit:enumeration>220</spirit:enumeration>
      <spirit:enumeration>221</spirit:enumeration>
      <spirit:enumeration>222</spirit:enumeration>
      <spirit:enumeration>223</spirit:enumeration>
      <spirit:enumeration>225</spirit:enumeration>
      <spirit:enumeration>227</spirit:enumeration>
      <spirit:enumeration>228</spirit:enumeration>
      <spirit:enumeration>229</spirit:enumeration>
      <spirit:enumeration>230</spirit:enumeration>
      <spirit:enumeration>231</spirit:enumeration>
      <spirit:enumeration>232</spirit:enumeration>
      <spirit:enumeration>233</spirit:enumeration>
      <spirit:enumeration>234</spirit:enumeration>
      <spirit:enumeration>235</spirit:enumeration>
      <spirit:enumeration>236</spirit:enumeration>
      <spirit:enumeration>237</spirit:enumeration>
      <spirit:enumeration>238</spirit:enumeration>
      <spirit:enumeration>239</spirit:enumeration>
      <spirit:enumeration>240</spirit:enumeration>
      <spirit:enumeration>241</spirit:enumeration>
      <spirit:enumeration>242</spirit:enumeration>
      <spirit:enumeration>243</spirit:enumeration>
      <spirit:enumeration>244</spirit:enumeration>
      <spirit:enumeration>245</spirit:enumeration>
      <spirit:enumeration>246</spirit:enumeration>
      <spirit:enumeration>247</spirit:enumeration>
      <spirit:enumeration>248</spirit:enumeration>
      <spirit:enumeration>249</spirit:enumeration>
      <spirit:enumeration>250</spirit:enumeration>
      <spirit:enumeration>251</spirit:enumeration>
      <spirit:enumeration>252</spirit:enumeration>
      <spirit:enumeration>253</spirit:enumeration>
      <spirit:enumeration>254</spirit:enumeration>
      <spirit:enumeration>255</spirit:enumeration>
      <spirit:enumeration>256</spirit:enumeration>
      <spirit:enumeration>257</spirit:enumeration>
      <spirit:enumeration>258</spirit:enumeration>
      <spirit:enumeration>259</spirit:enumeration>
      <spirit:enumeration>260</spirit:enumeration>
      <spirit:enumeration>261</spirit:enumeration>
      <spirit:enumeration>262</spirit:enumeration>
      <spirit:enumeration>263</spirit:enumeration>
      <spirit:enumeration>264</spirit:enumeration>
      <spirit:enumeration>265</spirit:enumeration>
      <spirit:enumeration>266</spirit:enumeration>
      <spirit:enumeration>267</spirit:enumeration>
      <spirit:enumeration>268</spirit:enumeration>
      <spirit:enumeration>269</spirit:enumeration>
      <spirit:enumeration>270</spirit:enumeration>
      <spirit:enumeration>271</spirit:enumeration>
      <spirit:enumeration>272</spirit:enumeration>
      <spirit:enumeration>273</spirit:enumeration>
      <spirit:enumeration>274</spirit:enumeration>
      <spirit:enumeration>275</spirit:enumeration>
      <spirit:enumeration>276</spirit:enumeration>
      <spirit:enumeration>277</spirit:enumeration>
      <spirit:enumeration>278</spirit:enumeration>
      <spirit:enumeration>279</spirit:enumeration>
      <spirit:enumeration>280</spirit:enumeration>
      <spirit:enumeration>281</spirit:enumeration>
      <spirit:enumeration>282</spirit:enumeration>
      <spirit:enumeration>283</spirit:enumeration>
      <spirit:enumeration>284</spirit:enumeration>
      <spirit:enumeration>285</spirit:enumeration>
      <spirit:enumeration>286</spirit:enumeration>
      <spirit:enumeration>287</spirit:enumeration>
      <spirit:enumeration>288</spirit:enumeration>
      <spirit:enumeration>289</spirit:enumeration>
      <spirit:enumeration>290</spirit:enumeration>
      <spirit:enumeration>291</spirit:enumeration>
      <spirit:enumeration>292</spirit:enumeration>
      <spirit:enumeration>293</spirit:enumeration>
      <spirit:enumeration>294</spirit:enumeration>
      <spirit:enumeration>295</spirit:enumeration>
      <spirit:enumeration>296</spirit:enumeration>
      <spirit:enumeration>297</spirit:enumeration>
      <spirit:enumeration>298</spirit:enumeration>
      <spirit:enumeration>299</spirit:enumeration>
      <spirit:enumeration>300</spirit:enumeration>
      <spirit:enumeration>301</spirit:enumeration>
      <spirit:enumeration>302</spirit:enumeration>
      <spirit:enumeration>303</spirit:enumeration>
      <spirit:enumeration>304</spirit:enumeration>
      <spirit:enumeration>305</spirit:enumeration>
      <spirit:enumeration>306</spirit:enumeration>
      <spirit:enumeration>307</spirit:enumeration>
      <spirit:enumeration>308</spirit:enumeration>
      <spirit:enumeration>309</spirit:enumeration>
      <spirit:enumeration>310</spirit:enumeration>
      <spirit:enumeration>311</spirit:enumeration>
      <spirit:enumeration>312</spirit:enumeration>
      <spirit:enumeration>313</spirit:enumeration>
      <spirit:enumeration>314</spirit:enumeration>
      <spirit:enumeration>315</spirit:enumeration>
      <spirit:enumeration>316</spirit:enumeration>
      <spirit:enumeration>317</spirit:enumeration>
      <spirit:enumeration>318</spirit:enumeration>
      <spirit:enumeration>319</spirit:enumeration>
      <spirit:enumeration>320</spirit:enumeration>
      <spirit:enumeration>321</spirit:enumeration>
      <spirit:enumeration>322</spirit:enumeration>
      <spirit:enumeration>323</spirit:enumeration>
      <spirit:enumeration>324</spirit:enumeration>
      <spirit:enumeration>325</spirit:enumeration>
      <spirit:enumeration>326</spirit:enumeration>
      <spirit:enumeration>327</spirit:enumeration>
      <spirit:enumeration>328</spirit:enumeration>
      <spirit:enumeration>329</spirit:enumeration>
      <spirit:enumeration>330</spirit:enumeration>
      <spirit:enumeration>331</spirit:enumeration>
      <spirit:enumeration>332</spirit:enumeration>
      <spirit:enumeration>333</spirit:enumeration>
      <spirit:enumeration>334</spirit:enumeration>
      <spirit:enumeration>335</spirit:enumeration>
      <spirit:enumeration>336</spirit:enumeration>
      <spirit:enumeration>338</spirit:enumeration>
      <spirit:enumeration>339</spirit:enumeration>
      <spirit:enumeration>340</spirit:enumeration>
      <spirit:enumeration>341</spirit:enumeration>
      <spirit:enumeration>342</spirit:enumeration>
      <spirit:enumeration>343</spirit:enumeration>
      <spirit:enumeration>344</spirit:enumeration>
      <spirit:enumeration>345</spirit:enumeration>
      <spirit:enumeration>346</spirit:enumeration>
      <spirit:enumeration>347</spirit:enumeration>
      <spirit:enumeration>348</spirit:enumeration>
      <spirit:enumeration>349</spirit:enumeration>
      <spirit:enumeration>350</spirit:enumeration>
      <spirit:enumeration>351</spirit:enumeration>
      <spirit:enumeration>352</spirit:enumeration>
      <spirit:enumeration>353</spirit:enumeration>
      <spirit:enumeration>354</spirit:enumeration>
      <spirit:enumeration>355</spirit:enumeration>
      <spirit:enumeration>356</spirit:enumeration>
      <spirit:enumeration>357</spirit:enumeration>
      <spirit:enumeration>358</spirit:enumeration>
      <spirit:enumeration>359</spirit:enumeration>
      <spirit:enumeration>360</spirit:enumeration>
      <spirit:enumeration>361</spirit:enumeration>
      <spirit:enumeration>362</spirit:enumeration>
      <spirit:enumeration>363</spirit:enumeration>
      <spirit:enumeration>364</spirit:enumeration>
      <spirit:enumeration>365</spirit:enumeration>
      <spirit:enumeration>366</spirit:enumeration>
      <spirit:enumeration>367</spirit:enumeration>
      <spirit:enumeration>368</spirit:enumeration>
      <spirit:enumeration>369</spirit:enumeration>
      <spirit:enumeration>370</spirit:enumeration>
      <spirit:enumeration>371</spirit:enumeration>
      <spirit:enumeration>372</spirit:enumeration>
      <spirit:enumeration>373</spirit:enumeration>
      <spirit:enumeration>374</spirit:enumeration>
      <spirit:enumeration>375</spirit:enumeration>
      <spirit:enumeration>376</spirit:enumeration>
      <spirit:enumeration>377</spirit:enumeration>
      <spirit:enumeration>378</spirit:enumeration>
      <spirit:enumeration>379</spirit:enumeration>
      <spirit:enumeration>380</spirit:enumeration>
      <spirit:enumeration>381</spirit:enumeration>
      <spirit:enumeration>382</spirit:enumeration>
      <spirit:enumeration>383</spirit:enumeration>
      <spirit:enumeration>384</spirit:enumeration>
      <spirit:enumeration>386</spirit:enumeration>
      <spirit:enumeration>388</spirit:enumeration>
      <spirit:enumeration>389</spirit:enumeration>
      <spirit:enumeration>390</spirit:enumeration>
      <spirit:enumeration>391</spirit:enumeration>
      <spirit:enumeration>392</spirit:enumeration>
      <spirit:enumeration>393</spirit:enumeration>
      <spirit:enumeration>394</spirit:enumeration>
      <spirit:enumeration>395</spirit:enumeration>
      <spirit:enumeration>396</spirit:enumeration>
      <spirit:enumeration>397</spirit:enumeration>
      <spirit:enumeration>398</spirit:enumeration>
      <spirit:enumeration>399</spirit:enumeration>
      <spirit:enumeration>400</spirit:enumeration>
      <spirit:enumeration>401</spirit:enumeration>
      <spirit:enumeration>402</spirit:enumeration>
      <spirit:enumeration>403</spirit:enumeration>
      <spirit:enumeration>404</spirit:enumeration>
      <spirit:enumeration>405</spirit:enumeration>
      <spirit:enumeration>406</spirit:enumeration>
      <spirit:enumeration>407</spirit:enumeration>
      <spirit:enumeration>408</spirit:enumeration>
      <spirit:enumeration>409</spirit:enumeration>
      <spirit:enumeration>410</spirit:enumeration>
      <spirit:enumeration>411</spirit:enumeration>
      <spirit:enumeration>412</spirit:enumeration>
      <spirit:enumeration>413</spirit:enumeration>
      <spirit:enumeration>414</spirit:enumeration>
      <spirit:enumeration>415</spirit:enumeration>
      <spirit:enumeration>417</spirit:enumeration>
      <spirit:enumeration>418</spirit:enumeration>
      <spirit:enumeration>419</spirit:enumeration>
      <spirit:enumeration>420</spirit:enumeration>
      <spirit:enumeration>421</spirit:enumeration>
      <spirit:enumeration>422</spirit:enumeration>
      <spirit:enumeration>423</spirit:enumeration>
      <spirit:enumeration>424</spirit:enumeration>
      <spirit:enumeration>425</spirit:enumeration>
      <spirit:enumeration>426</spirit:enumeration>
      <spirit:enumeration>427</spirit:enumeration>
      <spirit:enumeration>428</spirit:enumeration>
      <spirit:enumeration>429</spirit:enumeration>
      <spirit:enumeration>430</spirit:enumeration>
      <spirit:enumeration>431</spirit:enumeration>
      <spirit:enumeration>432</spirit:enumeration>
      <spirit:enumeration>433</spirit:enumeration>
      <spirit:enumeration>434</spirit:enumeration>
      <spirit:enumeration>435</spirit:enumeration>
      <spirit:enumeration>436</spirit:enumeration>
      <spirit:enumeration>437</spirit:enumeration>
      <spirit:enumeration>438</spirit:enumeration>
      <spirit:enumeration>439</spirit:enumeration>
      <spirit:enumeration>440</spirit:enumeration>
      <spirit:enumeration>441</spirit:enumeration>
      <spirit:enumeration>442</spirit:enumeration>
      <spirit:enumeration>443</spirit:enumeration>
      <spirit:enumeration>444</spirit:enumeration>
      <spirit:enumeration>450</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_56638a14</spirit:name>
      <spirit:enumeration>UC1899</spirit:enumeration>
      <spirit:enumeration>UC1299</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_606e5fda</spirit:name>
      <spirit:enumeration>AXI_16_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_17_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_18_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_19_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_20_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_21_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_22_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_23_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_24_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_25_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_26_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_27_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_28_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_29_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_30_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_31_ACLK</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_7873c525</spirit:name>
      <spirit:enumeration>div4</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_7a7dde49</spirit:name>
      <spirit:enumeration>true</spirit:enumeration>
      <spirit:enumeration>false</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_811163c2</spirit:name>
      <spirit:enumeration>User_Defined</spirit:enumeration>
      <spirit:enumeration>Linear</spirit:enumeration>
      <spirit:enumeration>Random</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_8aad6ae4</spirit:name>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_99269739</spirit:name>
      <spirit:enumeration>32</spirit:enumeration>
      <spirit:enumeration>33</spirit:enumeration>
      <spirit:enumeration>36</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_b9d8ad80</spirit:name>
      <spirit:enumeration>yes</spirit:enumeration>
      <spirit:enumeration>no</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c2b73541</spirit:name>
      <spirit:enumeration>TRUE</spirit:enumeration>
      <spirit:enumeration>FALSEE</spirit:enumeration>
      <spirit:enumeration>FALSE</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d944d518</spirit:name>
      <spirit:enumeration>100</spirit:enumeration>
      <spirit:enumeration>103</spirit:enumeration>
      <spirit:enumeration>106</spirit:enumeration>
      <spirit:enumeration>109</spirit:enumeration>
      <spirit:enumeration>113</spirit:enumeration>
      <spirit:enumeration>116</spirit:enumeration>
      <spirit:enumeration>120</spirit:enumeration>
      <spirit:enumeration>124</spirit:enumeration>
      <spirit:enumeration>129</spirit:enumeration>
      <spirit:enumeration>133</spirit:enumeration>
      <spirit:enumeration>138</spirit:enumeration>
      <spirit:enumeration>144</spirit:enumeration>
      <spirit:enumeration>150</spirit:enumeration>
      <spirit:enumeration>157</spirit:enumeration>
      <spirit:enumeration>164</spirit:enumeration>
      <spirit:enumeration>171</spirit:enumeration>
      <spirit:enumeration>180</spirit:enumeration>
      <spirit:enumeration>189</spirit:enumeration>
      <spirit:enumeration>200</spirit:enumeration>
      <spirit:enumeration>212</spirit:enumeration>
      <spirit:enumeration>225</spirit:enumeration>
      <spirit:enumeration>240</spirit:enumeration>
      <spirit:enumeration>257</spirit:enumeration>
      <spirit:enumeration>277</spirit:enumeration>
      <spirit:enumeration>300</spirit:enumeration>
      <spirit:enumeration>327</spirit:enumeration>
      <spirit:enumeration>360</spirit:enumeration>
      <spirit:enumeration>400</spirit:enumeration>
      <spirit:enumeration>450</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_e42ba42f</spirit:name>
      <spirit:enumeration>false</spirit:enumeration>
      <spirit:enumeration>true</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_e7c484ae</spirit:name>
      <spirit:enumeration>TRUE</spirit:enumeration>
      <spirit:enumeration>FALSE</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_f099505f</spirit:name>
      <spirit:enumeration>div4</spirit:enumeration>
      <spirit:enumeration>div8</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ff2e97f4</spirit:name>
      <spirit:enumeration>AXI_00_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_01_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_02_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_03_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_04_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_05_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_06_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_07_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_08_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_09_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_10_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_11_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_12_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_13_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_14_ACLK</spirit:enumeration>
      <spirit:enumeration>AXI_15_ACLK</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_veriloginstantiationtemplate_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>hbm_0.vho</spirit:name>
        <spirit:userFileType>vhdlTemplate</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>hbm_0.veo</spirit:name>
        <spirit:userFileType>verilogTemplate</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>hdl/rtl/hbm_v1_0_3.sv</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/hbm_v1_0_vlsyn_rfs.sv</spirit:name>
        <spirit:fileType>systemVerilogSource</spirit:fileType>
        <spirit:logicalName>hbm_v1_0_3</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/xsdb/hbm_v1_0_3_chipscope_icon2xsdb_mstrbr_ver_inc.vh</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:isIncludeFile>true</spirit:isIncludeFile>
        <spirit:logicalName>hbm_v1_0_3</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/xsdb/hbm_v1_0_3_cs_ver_inc.vh</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:isIncludeFile>true</spirit:isIncludeFile>
        <spirit:logicalName>hbm_v1_0_3</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/rtl/xpm_internal_config_file_0.mem</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/rtl/xpm_internal_config_file_1.mem</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/par/hbm_ip.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/par/hbm_0_ooc.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:define>
          <spirit:name>processing_order</spirit:name>
          <spirit:value>early</spirit:value>
        </spirit:define>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsynthesiswrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>synth/hbm_0.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_externalfiles_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>hbm_0.dcp</spirit:name>
        <spirit:userFileType>dcp</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hbm_0_stub.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:userFileType>USED_IN_synth_blackbox_stub</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hbm_0_stub.vhdl</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:userFileType>USED_IN_synth_blackbox_stub</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hbm_0_sim_netlist.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:userFileType>USED_IN_simulation</spirit:userFileType>
        <spirit:userFileType>USED_IN_single_language</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hbm_0_sim_netlist.vhdl</spirit:name>
        <spirit:fileType>vhdlSource</spirit:fileType>
        <spirit:userFileType>USED_IN_simulation</spirit:userFileType>
        <spirit:userFileType>USED_IN_single_language</spirit:userFileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>HBM Memory Interface IP</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>USER_EN_PHY_ONLY</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_EN_PHY_ONLY" spirit:choiceRef="choice_list_e7c484ae" spirit:order="2">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_EN_PHY_ONLY">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_ADDR_SIZE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_ADDR_SIZE" spirit:choiceRef="choice_list_99269739" spirit:order="3">32</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_EN_VNC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_EN_VNC" spirit:choiceRef="choice_list_e7c484ae" spirit:order="4">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_DEBUG_EN</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_DEBUG_EN" spirit:choiceRef="choice_list_e7c484ae" spirit:order="5">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_XSDB_EN</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_XSDB_EN" spirit:choiceRef="choice_list_e7c484ae" spirit:order="6">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_INIT_BYPASS</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_INIT_BYPASS" spirit:choiceRef="choice_list_e7c484ae" spirit:order="7">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SINGLE_STACK_SELECTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SINGLE_STACK_SELECTION" spirit:choiceRef="choice_list_30725cf7" spirit:order="8">LEFT</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_DENSITY</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_DENSITY" spirit:choiceRef="choice_list_153d9765" spirit:order="9">4GB</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_STACK</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_STACK" spirit:choiceRef="choice_list_8aad6ae4" spirit:order="10">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MEMORY_DISPLAY</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MEMORY_DISPLAY" spirit:order="11">4096</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PARAM_ENABLEMENT.USER_MEMORY_DISPLAY">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AUTO_POPULATE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AUTO_POPULATE" spirit:choiceRef="choice_list_b9d8ad80" spirit:order="12">yes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SWITCH_ENABLE_00</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SWITCH_ENABLE_00" spirit:choiceRef="choice_list_e7c484ae" spirit:order="13">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SWITCH_ENABLE_01</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SWITCH_ENABLE_01" spirit:choiceRef="choice_list_e7c484ae" spirit:order="14">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_SWITCH_ENABLE_01">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_CLK_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_CLK_0" spirit:choiceRef="choice_list_d944d518" spirit:order="15">100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_CLK_PS_0</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_CLK_PS_0" spirit:order="16">5000.00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_CLK_XDC_0</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_CLK_XDC_0" spirit:order="17">10.00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_CLK_PS_1</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_CLK_PS_1" spirit:order="18">5000.00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_CLK_XDC_1</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_CLK_XDC_1" spirit:order="19">10.00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_CLKOUTDIV_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_CLKOUTDIV_0" spirit:order="20">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_FBDIV_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_FBDIV_0" spirit:order="21">36</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_CP_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_CP_0" spirit:order="22">6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_RES_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_RES_0" spirit:order="23">10</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LFHF_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LFHF_0" spirit:order="24">3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LOCK_REF_DLY_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LOCK_REF_DLY_0" spirit:order="25">31</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LOCK_FB_DLY_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LOCK_FB_DLY_0" spirit:order="26">31</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LOCK_CNT_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LOCK_CNT_0" spirit:order="27">1000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_CP_RES_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_CP_RES_0" spirit:order="28" spirit:bitStringLength="32">0x0000A600</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_CP_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_CP_0" spirit:order="29" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_LOCK_FB_REF_DLY_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_LOCK_FB_REF_DLY_0" spirit:order="30" spirit:bitStringLength="32">0x00001f1f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_LOCK_CNT_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_LOCK_CNT_0" spirit:order="31" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_FBDIV_CLKOUTDIV_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_FBDIV_CLKOUTDIV_0" spirit:order="32" spirit:bitStringLength="32">0x00000902</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_CP_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_CP_1" spirit:order="33">6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_RES_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_RES_1" spirit:order="34">10</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LFHF_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LFHF_1" spirit:order="35">3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LOCK_REF_DLY_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LOCK_REF_DLY_1" spirit:order="36">31</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LOCK_FB_DLY_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LOCK_FB_DLY_1" spirit:order="37">31</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_LOCK_CNT_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_LOCK_CNT_1" spirit:order="38">1000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_CLK_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_CLK_1" spirit:choiceRef="choice_list_d944d518" spirit:order="39">100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_CLKOUTDIV_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_CLKOUTDIV_1" spirit:order="40">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_FBDIV_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_FBDIV_1" spirit:order="41">36</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_CP_RES_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_CP_RES_1" spirit:order="42" spirit:bitStringLength="32">0x0000A600</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_CP_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_CP_1" spirit:order="43" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_LOCK_FB_REF_DLY_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_LOCK_FB_REF_DLY_1" spirit:order="44" spirit:bitStringLength="32">0x00001f1f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_LOCK_CNT_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_LOCK_CNT_1" spirit:order="45" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_HEX_FBDIV_CLKOUTDIV_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_HEX_FBDIV_CLKOUTDIV_1" spirit:order="46" spirit:bitStringLength="32">0x00000902</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_TCK_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_TCK_0" spirit:order="47" spirit:minimum="225" spirit:maximum="900" spirit:rangeType="long">900</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_TCK_0_PERIOD</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_TCK_0_PERIOD" spirit:order="48" spirit:minimum="1.111" spirit:maximum="40.0">1.1111111111111112</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HYNIX_MEM</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HYNIX_MEM" spirit:order="49">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRC_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRC_0" spirit:order="50" spirit:bitStringLength="8">0x2B</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRAS_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRAS_0" spirit:order="51" spirit:bitStringLength="7">0x1E</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRCDRD_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRCDRD_0" spirit:order="52" spirit:bitStringLength="7">0x0D</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRCDWR_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRCDWR_0" spirit:order="53" spirit:bitStringLength="6">0x09</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRRDL_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRRDL_0" spirit:order="54" spirit:bitStringLength="5">0x04</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRRDS_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRRDS_0" spirit:order="55" spirit:bitStringLength="5">0x04</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tFAW_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tFAW_0" spirit:order="56" spirit:bitStringLength="9">0x00F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_0" spirit:order="57" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_1" spirit:order="58" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_2</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_2" spirit:order="59" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_3</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_3" spirit:order="60" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_4</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_4" spirit:order="61" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_5</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_5" spirit:order="62" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_6</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_6" spirit:order="63" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_7</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_7" spirit:order="64" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_8</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_8" spirit:order="65" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_9</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_9" spirit:order="66" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_10</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_10" spirit:order="67" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_11</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_11" spirit:order="68" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_12</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_12" spirit:order="69" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_13</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_13" spirit:order="70" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_14</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_14" spirit:order="71" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRTP_15</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRTP_15" spirit:order="72" spirit:bitStringLength="5">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRP_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRP_0" spirit:order="73" spirit:bitStringLength="6">0x0D</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_0" spirit:order="74" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_1" spirit:order="75" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_2</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_2" spirit:order="76" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_3</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_3" spirit:order="77" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_4</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_4" spirit:order="78" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_5</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_5" spirit:order="79" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_6</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_6" spirit:order="80" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_7</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_7" spirit:order="81" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_8</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_8" spirit:order="82" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_9</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_9" spirit:order="83" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_10</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_10" spirit:order="84" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_11</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_11" spirit:order="85" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_12</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_12" spirit:order="86" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_13</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_13" spirit:order="87" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_14</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_14" spirit:order="88" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWR_15</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWR_15" spirit:order="89" spirit:bitStringLength="6">0x0F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWTRL_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWTRL_0" spirit:order="90" spirit:bitStringLength="4">0x8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWTRS_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWTRS_0" spirit:order="91" spirit:bitStringLength="3">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tXP_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tXP_0" spirit:order="92" spirit:bitStringLength="5">0x07</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRFC_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRFC_0" spirit:order="93" spirit:bitStringLength="10">0x0EA</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRFCSB_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRFCSB_0" spirit:order="94" spirit:bitStringLength="8">0x90</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRREFD_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRREFD_0" spirit:order="95" spirit:bitStringLength="4">0x8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WL_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WL_0" spirit:order="96" spirit:bitStringLength="6">0x07</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_0</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_0" spirit:order="97" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_1" spirit:order="98" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_2</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_2" spirit:order="99" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_3</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_3" spirit:order="100" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_4</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_4" spirit:order="101" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_5</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_5" spirit:order="102" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_6</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_6" spirit:order="103" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_7</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_7" spirit:order="104" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_8</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_8" spirit:order="105" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_9</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_9" spirit:order="106" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_10</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_10" spirit:order="107" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_11</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_11" spirit:order="108" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_12</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_12" spirit:order="109" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_13</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_13" spirit:order="110" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_14</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_14" spirit:order="111" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_RL_15</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_RL_15" spirit:order="112" spirit:bitStringLength="6">0x16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRC_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRC_1" spirit:order="113" spirit:bitStringLength="8">0x2B</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRAS_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRAS_1" spirit:order="114" spirit:bitStringLength="7">0x1E</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRCDRD_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRCDRD_1" spirit:order="115" spirit:bitStringLength="7">0x0D</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRCDWR_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRCDWR_1" spirit:order="116" spirit:bitStringLength="6">0x09</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRRDL_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRRDL_1" spirit:order="117" spirit:bitStringLength="5">0x04</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRRDS_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRRDS_1" spirit:order="118" spirit:bitStringLength="5">0x04</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tFAW_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tFAW_1" spirit:order="119" spirit:bitStringLength="9">0x00F</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRP_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRP_1" spirit:order="120" spirit:bitStringLength="6">0x0D</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWTRL_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWTRL_1" spirit:order="121" spirit:bitStringLength="4">0x8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tWTRS_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tWTRS_1" spirit:order="122" spirit:bitStringLength="3">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tXP_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tXP_1" spirit:order="123" spirit:bitStringLength="5">0x07</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRFC_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRFC_1" spirit:order="124" spirit:bitStringLength="10">0x0EA</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRFCSB_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRFCSB_1" spirit:order="125" spirit:bitStringLength="8">0x90</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_tRREFD_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_tRREFD_1" spirit:order="126" spirit:bitStringLength="4">0x8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WL_1</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WL_1" spirit:order="127" spirit:bitStringLength="6">0x07</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_APB_PCLK_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_APB_PCLK_0" spirit:order="128" spirit:minimum="50" spirit:maximum="100" spirit:rangeType="long">100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_TEMP_POLL_PERIOD_0</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_TEMP_POLL_PERIOD_0" spirit:order="129" spirit:minimum="1.0" spirit:maximum="1000.0">1.0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_TEMP_POLL_CNT_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_TEMP_POLL_CNT_0" spirit:order="130">100000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_APB_PCLK_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_APB_PCLK_1" spirit:order="131" spirit:minimum="50" spirit:maximum="100" spirit:rangeType="long">100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_TEMP_POLL_PERIOD_1</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_TEMP_POLL_PERIOD_1" spirit:order="132" spirit:minimum="1.0" spirit:maximum="1000.0">1.0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_TEMP_POLL_CNT_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_TEMP_POLL_CNT_1" spirit:order="133">100000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_POP_EN" spirit:order="134">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_POP_EN" spirit:order="135">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_POP_EN" spirit:order="136">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_POP_EN" spirit:order="137">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_POP_EN" spirit:order="138">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_POP_EN" spirit:order="139">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_POP_EN" spirit:order="140">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_POP_EN" spirit:order="141">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_POP_EN" spirit:order="142">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_POP_EN" spirit:order="143">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_POP_EN" spirit:order="144">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_POP_EN" spirit:order="145">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_POP_EN" spirit:order="146">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_POP_EN" spirit:order="147">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_POP_EN" spirit:order="148">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_POP_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_POP_EN" spirit:order="149">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="150">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="151">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="152">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="153">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="154">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="155">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="156">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="157">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="158">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="159">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="160">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="161">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="162">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="163">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="164">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_TRAFFIC_OPTION</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_TRAFFIC_OPTION" spirit:choiceRef="choice_list_811163c2" spirit:order="165">User_Defined</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_TCK_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_TCK_1" spirit:order="166" spirit:minimum="225" spirit:maximum="900" spirit:rangeType="long">900</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_TCK_1_PERIOD</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_TCK_1_PERIOD" spirit:order="167" spirit:minimum="1.111" spirit:maximum="40.0">1.1111111111111112</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_0</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_0" spirit:choiceRef="choice_list_7873c525" spirit:order="168">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_1</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_1" spirit:choiceRef="choice_list_f099505f" spirit:order="169">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_2</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_2" spirit:choiceRef="choice_list_f099505f" spirit:order="170">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_3</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_3" spirit:choiceRef="choice_list_f099505f" spirit:order="171">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_4</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_4" spirit:choiceRef="choice_list_f099505f" spirit:order="172">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_5</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_5" spirit:choiceRef="choice_list_f099505f" spirit:order="173">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_6</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_6" spirit:choiceRef="choice_list_f099505f" spirit:order="174">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_7</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_7" spirit:choiceRef="choice_list_f099505f" spirit:order="175">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_8</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_8" spirit:choiceRef="choice_list_7873c525" spirit:order="176">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_9</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_9" spirit:choiceRef="choice_list_f099505f" spirit:order="177">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_10</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_10" spirit:choiceRef="choice_list_f099505f" spirit:order="178">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_11</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_11" spirit:choiceRef="choice_list_f099505f" spirit:order="179">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_12</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_12" spirit:choiceRef="choice_list_f099505f" spirit:order="180">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_13</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_13" spirit:choiceRef="choice_list_f099505f" spirit:order="181">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_14</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_14" spirit:choiceRef="choice_list_f099505f" spirit:order="182">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_LINE_RATE_15</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_LINE_RATE_15" spirit:choiceRef="choice_list_f099505f" spirit:order="183">div4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_OUT_CLK_0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_OUT_CLK_0" spirit:order="184" spirit:minimum="50" spirit:maximum="1800" spirit:rangeType="long">1800</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_HBM_REF_OUT_CLK_1</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_HBM_REF_OUT_CLK_1" spirit:order="185" spirit:minimum="50" spirit:maximum="1800" spirit:rangeType="long">1800</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_0</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_0" spirit:order="186">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_1</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_1" spirit:order="187">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_2</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_2" spirit:order="188">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_3</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_3" spirit:order="189">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_4</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_4" spirit:order="190">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_5</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_5" spirit:order="191">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_6</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_6" spirit:order="192">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_7</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_7" spirit:order="193">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_8</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_8" spirit:order="194">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_9</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_9" spirit:order="195">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_10</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_10" spirit:order="196">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_11</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_11" spirit:order="197">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_12</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_12" spirit:order="198">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_13</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_13" spirit:order="199">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_14</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_14" spirit:order="200">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_VT_TRACKING_15</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_VT_TRACKING_15" spirit:order="201">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_0</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_0" spirit:order="202">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_1</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_1" spirit:order="203">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_2</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_2" spirit:order="204">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_3</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_3" spirit:order="205">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_4</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_4" spirit:order="206">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_5</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_5" spirit:order="207">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_6</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_6" spirit:order="208">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_7</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_7" spirit:order="209">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_8</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_8" spirit:order="210">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_9</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_9" spirit:order="211">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_10</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_10" spirit:order="212">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_11</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_11" spirit:order="213">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_12</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_12" spirit:order="214">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_13</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_13" spirit:order="215">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_14</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_14" spirit:order="216">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_ENABLE_DQS_TRAINING_15</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_ENABLE_DQS_TRAINING_15" spirit:order="217">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_WRITE_DBI_EN" spirit:order="218">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_WRITE_DBI_EN" spirit:order="219">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_WRITE_DBI_EN" spirit:order="220">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_WRITE_DBI_EN" spirit:order="221">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_WRITE_DBI_EN" spirit:order="222">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_WRITE_DBI_EN" spirit:order="223">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_WRITE_DBI_EN" spirit:order="224">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_WRITE_DBI_EN" spirit:order="225">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_WRITE_DBI_EN" spirit:order="226">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_WRITE_DBI_EN" spirit:order="227">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_WRITE_DBI_EN" spirit:order="228">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_WRITE_DBI_EN" spirit:order="229">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_WRITE_DBI_EN" spirit:order="230">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_WRITE_DBI_EN" spirit:order="231">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_WRITE_DBI_EN" spirit:order="232">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_WRITE_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_WRITE_DBI_EN" spirit:order="233">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_READ_DBI_EN" spirit:order="234">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_READ_DBI_EN" spirit:order="235">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_READ_DBI_EN" spirit:order="236">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_READ_DBI_EN" spirit:order="237">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_READ_DBI_EN" spirit:order="238">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_READ_DBI_EN" spirit:order="239">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_READ_DBI_EN" spirit:order="240">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_READ_DBI_EN" spirit:order="241">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_READ_DBI_EN" spirit:order="242">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_READ_DBI_EN" spirit:order="243">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_READ_DBI_EN" spirit:order="244">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_READ_DBI_EN" spirit:order="245">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_READ_DBI_EN" spirit:order="246">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_READ_DBI_EN" spirit:order="247">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_READ_DBI_EN" spirit:order="248">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_READ_DBI_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_READ_DBI_EN" spirit:order="249">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_LIST0</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_LIST0" spirit:choiceRef="choice_list_ff2e97f4" spirit:order="250">AXI_07_ACLK</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_LIST1</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_LIST1" spirit:choiceRef="choice_list_606e5fda" spirit:order="251">AXI_24_ACLK</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_00</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_00" spirit:choiceRef="choice_list_e7c484ae" spirit:order="252">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_01</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_01" spirit:choiceRef="choice_list_e7c484ae" spirit:order="253">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_02</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_02" spirit:choiceRef="choice_list_e7c484ae" spirit:order="254">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_03</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_03" spirit:choiceRef="choice_list_e7c484ae" spirit:order="255">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_04</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_04" spirit:choiceRef="choice_list_e7c484ae" spirit:order="256">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_05</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_05" spirit:choiceRef="choice_list_e7c484ae" spirit:order="257">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_06</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_06" spirit:choiceRef="choice_list_e7c484ae" spirit:order="258">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_07</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_07" spirit:choiceRef="choice_list_e7c484ae" spirit:order="259">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_08</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_08" spirit:choiceRef="choice_list_e7c484ae" spirit:order="260">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_09</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_09" spirit:choiceRef="choice_list_e7c484ae" spirit:order="261">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_10</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_10" spirit:choiceRef="choice_list_e7c484ae" spirit:order="262">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_11</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_11" spirit:choiceRef="choice_list_e7c484ae" spirit:order="263">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_12</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_12" spirit:choiceRef="choice_list_c2b73541" spirit:order="264">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_13</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_13" spirit:choiceRef="choice_list_e7c484ae" spirit:order="265">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_14</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_14" spirit:choiceRef="choice_list_e7c484ae" spirit:order="266">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_15</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_15" spirit:choiceRef="choice_list_e7c484ae" spirit:order="267">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_16</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_16" spirit:choiceRef="choice_list_e7c484ae" spirit:order="268">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_17</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_17" spirit:choiceRef="choice_list_e7c484ae" spirit:order="269">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_18</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_18" spirit:choiceRef="choice_list_e7c484ae" spirit:order="270">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_19</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_19" spirit:choiceRef="choice_list_e7c484ae" spirit:order="271">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_20</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_20" spirit:choiceRef="choice_list_e7c484ae" spirit:order="272">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_21</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_21" spirit:choiceRef="choice_list_e7c484ae" spirit:order="273">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_22</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_22" spirit:choiceRef="choice_list_e7c484ae" spirit:order="274">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_23</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_23" spirit:choiceRef="choice_list_e7c484ae" spirit:order="275">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_24</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_24" spirit:choiceRef="choice_list_e7c484ae" spirit:order="276">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_25</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_25" spirit:choiceRef="choice_list_e7c484ae" spirit:order="277">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_26</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_26" spirit:choiceRef="choice_list_e7c484ae" spirit:order="278">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_27</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_27" spirit:choiceRef="choice_list_e7c484ae" spirit:order="279">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_28</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_28" spirit:choiceRef="choice_list_e7c484ae" spirit:order="280">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_29</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_29" spirit:choiceRef="choice_list_e7c484ae" spirit:order="281">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_30</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_30" spirit:choiceRef="choice_list_e7c484ae" spirit:order="282">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CLK_SEL_31</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CLK_SEL_31" spirit:choiceRef="choice_list_e7c484ae" spirit:order="283">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_00</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_00" spirit:choiceRef="choice_list_e7c484ae" spirit:order="284">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_01</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_01" spirit:choiceRef="choice_list_e7c484ae" spirit:order="285">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_02</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_02" spirit:choiceRef="choice_list_e7c484ae" spirit:order="286">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_03</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_03" spirit:choiceRef="choice_list_e7c484ae" spirit:order="287">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_04</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_04" spirit:choiceRef="choice_list_e7c484ae" spirit:order="288">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_05</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_05" spirit:choiceRef="choice_list_e7c484ae" spirit:order="289">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_06</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_06" spirit:choiceRef="choice_list_e7c484ae" spirit:order="290">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_07</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_07" spirit:choiceRef="choice_list_e7c484ae" spirit:order="291">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_08</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_08" spirit:choiceRef="choice_list_e7c484ae" spirit:order="292">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_09</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_09" spirit:choiceRef="choice_list_e7c484ae" spirit:order="293">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_10</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_10" spirit:choiceRef="choice_list_e7c484ae" spirit:order="294">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_11</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_11" spirit:choiceRef="choice_list_e7c484ae" spirit:order="295">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_12</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_12" spirit:choiceRef="choice_list_e7c484ae" spirit:order="296">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_13</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_13" spirit:choiceRef="choice_list_e7c484ae" spirit:order="297">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_14</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_14" spirit:choiceRef="choice_list_e7c484ae" spirit:order="298">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_15</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_15" spirit:choiceRef="choice_list_e7c484ae" spirit:order="299">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_APB_00</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_APB_00" spirit:choiceRef="choice_list_e7c484ae" spirit:order="300">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC_ENABLE_APB_01</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC_ENABLE_APB_01" spirit:choiceRef="choice_list_e7c484ae" spirit:order="301">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="302">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="303">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="304">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="305">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="306">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="307">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="308">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="309">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="310">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="311">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="312">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="313">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="314">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="315">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="316">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="317">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_PRE_DEF_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_PRE_DEF_ADDR_MAP_SEL" spirit:choiceRef="choice_list_0da07c0e" spirit:order="318">ROW_BANK_COLUMN</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_PRE_DEF_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="319">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="320">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="321">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="322">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="323">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="324">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="325">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="326">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="327">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="328">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="329">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="330">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="331">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="332">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="333">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_WRITE_READ_REGROUPING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_WRITE_READ_REGROUPING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="334">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="335">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="336">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="337">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="338">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="339">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="340">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="341">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="342">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="343">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="344">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="345">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="346">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="347">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="348">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="349">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LOOKAHEAD_SBRF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LOOKAHEAD_SBRF" spirit:choiceRef="choice_list_7a7dde49" spirit:order="350">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_LOOKAHEAD_SBRF">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="351">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="352">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="353">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="354">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="355">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="356">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="357">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="358">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="359">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="360">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="361">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="362">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="363">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="364">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="365">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_CLOSE_PAGE_REORDER</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_CLOSE_PAGE_REORDER" spirit:choiceRef="choice_list_7a7dde49" spirit:order="366">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="367">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="368">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="369">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="370">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="371">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="372">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="373">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="374">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="375">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="376">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="377">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="378">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="379">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="380">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="381">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_REF_TEMP_COMP</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_REF_TEMP_COMP" spirit:choiceRef="choice_list_7a7dde49" spirit:order="382">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="383" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="384" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="385" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="386" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="387" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="388" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="389" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="390" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="391" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="392" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="393" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="394" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="395" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="396" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="397" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_IDLE_ENTR_SELF_REFRESH_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_IDLE_ENTR_SELF_REFRESH_MODE" spirit:order="398" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="399" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="400" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="401" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="402" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="403" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="404" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="405" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="406" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="407" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="408" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="409" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="410" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="411" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="412" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="413" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_IDLE_ENTR_PWR_DOWN_MODE</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_IDLE_ENTR_PWR_DOWN_MODE" spirit:order="414" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="415">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="416">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="417">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="418">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="419">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="420">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="421">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="422">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="423">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="424">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="425">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="426">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="427">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="428">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="429">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_TEMP_CTRL_SELF_REF_INTVL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_TEMP_CTRL_SELF_REF_INTVL" spirit:choiceRef="choice_list_7a7dde49" spirit:order="430">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="431">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="432">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="433">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="434">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="435">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="436">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="437">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="438">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="439">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="440">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="441">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="442">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="443">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="444">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="445">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_ECC_BYPASS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_ECC_BYPASS" spirit:choiceRef="choice_list_7a7dde49" spirit:order="446">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="447">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="448">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="449">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="450">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="451">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="452">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="453">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="454">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="455">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="456">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="457">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="458">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="459">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="460">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="461">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_ENABLE_ECC_CORRECTION</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_ENABLE_ECC_CORRECTION" spirit:choiceRef="choice_list_7a7dde49" spirit:order="462">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="463">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="464">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="465">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="466">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="467">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="468">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="469">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="470">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="471">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="472">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="473">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="474">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="475">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="476">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="477">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_ENABLE_ECC_SCRUBBING</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_ENABLE_ECC_SCRUBBING" spirit:choiceRef="choice_list_7a7dde49" spirit:order="478">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_ENABLE_ECC_SCRUBBING">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_ECC_SCRUB_PERIOD" spirit:order="479" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_ECC_SCRUB_PERIOD" spirit:order="480" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_ECC_SCRUB_PERIOD" spirit:order="481" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_ECC_SCRUB_PERIOD" spirit:order="482" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_ECC_SCRUB_PERIOD" spirit:order="483" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_ECC_SCRUB_PERIOD" spirit:order="484" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_ECC_SCRUB_PERIOD" spirit:order="485" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_ECC_SCRUB_PERIOD" spirit:order="486" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_ECC_SCRUB_PERIOD" spirit:order="487" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_ECC_SCRUB_PERIOD" spirit:order="488" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_ECC_SCRUB_PERIOD" spirit:order="489" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_ECC_SCRUB_PERIOD" spirit:order="490" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_ECC_SCRUB_PERIOD" spirit:order="491" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_ECC_SCRUB_PERIOD" spirit:order="492" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_ECC_SCRUB_PERIOD" spirit:order="493" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_ECC_SCRUB_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_ECC_SCRUB_PERIOD" spirit:order="494" spirit:bitStringLength="13">0x0002</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_ECC_SCRUB_PERIOD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="495">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="496">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="497">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="498">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="499">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="500">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="501">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="502">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="503">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="504">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="505">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="506">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="507">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="508">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="509">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_INITILIZE_MEM_USING_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_INITILIZE_MEM_USING_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="510">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_INITILIZE_MEM_USING_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="511">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="512">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="513">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="514">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="515">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="516">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="517">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="518">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="519">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="520">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="521">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="522">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="523">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="524">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="525">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_INITILIZE_MEM_USING_RMW_ECC_SCRUB</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_INITILIZE_MEM_USING_RMW_ECC_SCRUB" spirit:choiceRef="choice_list_7a7dde49" spirit:order="526">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_INITILIZE_MEM_USING_RMW_ECC_SCRUB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="527">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="528">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_COL_ADDR_LOW" spirit:order="529" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_COL_ADDR_HIGH" spirit:order="530" spirit:bitStringLength="4">0xa</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_BA0_BA4_MAP" spirit:order="531" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_BA5_MAP" spirit:order="532" spirit:bitStringLength="6">0x00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_RA0_RA4_MAP" spirit:order="533" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_RA5_RA9_MAP" spirit:order="534" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_RA10_RA14_MAP" spirit:order="535" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_RA15_RA17_MAP" spirit:order="536" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_CA0_CA4_MAP" spirit:order="537" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_CA5_CA9_MAP" spirit:order="538" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LADDR_CA10_CA15_MAP" spirit:order="539" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="540">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="541">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="542">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_REF_CMD_PERIOD" spirit:order="543" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="544">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="545">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_SBREF_ISSUE_PER" spirit:order="546" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_STACK_8HI</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_STACK_8HI" spirit:choiceRef="choice_list_e42ba42f" spirit:order="547">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="548">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="549">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="550">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="551">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="552">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="553">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_Q_AGE_LIMIT" spirit:order="554" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="555">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="556">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="557">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="558">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="559">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="560">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="561">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="562">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="563">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="564">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="565">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_COL_ADDR_LOW" spirit:order="566" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_COL_ADDR_HIGH" spirit:order="567" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_BA0_BA4_MAP" spirit:order="568" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_BA5_MAP" spirit:order="569" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_RA0_RA4_MAP" spirit:order="570" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_RA5_RA9_MAP" spirit:order="571" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_RA10_RA14_MAP" spirit:order="572" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_RA15_RA17_MAP" spirit:order="573" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_CA0_CA4_MAP" spirit:order="574" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_CA5_CA9_MAP" spirit:order="575" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LADDR_CA10_CA15_MAP" spirit:order="576" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="577">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="578">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="579">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_REF_CMD_PERIOD" spirit:order="580" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="581">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="582">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_SBREF_ISSUE_PER" spirit:order="583" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="584">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="585">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="586">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="587">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="588">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="589">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_Q_AGE_LIMIT" spirit:order="590" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="591">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="592">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="593">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="594">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="595">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="596">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="597">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="598">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="599">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="600">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="601">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_COL_ADDR_LOW" spirit:order="602" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_COL_ADDR_HIGH" spirit:order="603" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_BA0_BA4_MAP" spirit:order="604" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_BA5_MAP" spirit:order="605" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_RA0_RA4_MAP" spirit:order="606" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_RA5_RA9_MAP" spirit:order="607" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_RA10_RA14_MAP" spirit:order="608" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_RA15_RA17_MAP" spirit:order="609" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_CA0_CA4_MAP" spirit:order="610" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_CA5_CA9_MAP" spirit:order="611" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LADDR_CA10_CA15_MAP" spirit:order="612" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="613">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="614">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="615">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_REF_CMD_PERIOD" spirit:order="616" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="617">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="618">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_SBREF_ISSUE_PER" spirit:order="619" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="620">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="621">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="622">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="623">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="624">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="625">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_Q_AGE_LIMIT" spirit:order="626" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="627">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="628">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="629">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="630">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="631">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="632">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="633">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="634">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="635">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="636">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="637">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_COL_ADDR_LOW" spirit:order="638" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_COL_ADDR_HIGH" spirit:order="639" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_BA0_BA4_MAP" spirit:order="640" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_BA5_MAP" spirit:order="641" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_RA0_RA4_MAP" spirit:order="642" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_RA5_RA9_MAP" spirit:order="643" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_RA10_RA14_MAP" spirit:order="644" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_RA15_RA17_MAP" spirit:order="645" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_CA0_CA4_MAP" spirit:order="646" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_CA5_CA9_MAP" spirit:order="647" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LADDR_CA10_CA15_MAP" spirit:order="648" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="649">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="650">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="651">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_REF_CMD_PERIOD" spirit:order="652" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="653">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="654">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_SBREF_ISSUE_PER" spirit:order="655" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="656">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="657">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="658">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="659">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="660">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="661">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_Q_AGE_LIMIT" spirit:order="662" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="663">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="664">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="665">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="666">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="667">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="668">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="669">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="670">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="671">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="672">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="673">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_COL_ADDR_LOW" spirit:order="674" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_COL_ADDR_HIGH" spirit:order="675" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_BA0_BA4_MAP" spirit:order="676" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_BA5_MAP" spirit:order="677" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_RA0_RA4_MAP" spirit:order="678" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_RA5_RA9_MAP" spirit:order="679" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_RA10_RA14_MAP" spirit:order="680" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_RA15_RA17_MAP" spirit:order="681" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_CA0_CA4_MAP" spirit:order="682" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_CA5_CA9_MAP" spirit:order="683" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LADDR_CA10_CA15_MAP" spirit:order="684" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="685">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="686">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="687">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_REF_CMD_PERIOD" spirit:order="688" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="689">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="690">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_SBREF_ISSUE_PER" spirit:order="691" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="692">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="693">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="694">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="695">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="696">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="697">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_Q_AGE_LIMIT" spirit:order="698" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="699">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="700">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="701">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="702">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="703">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="704">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="705">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="706">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="707">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="708">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="709">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_COL_ADDR_LOW" spirit:order="710" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_COL_ADDR_HIGH" spirit:order="711" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_BA0_BA4_MAP" spirit:order="712" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_BA5_MAP" spirit:order="713" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_RA0_RA4_MAP" spirit:order="714" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_RA5_RA9_MAP" spirit:order="715" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_RA10_RA14_MAP" spirit:order="716" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_RA15_RA17_MAP" spirit:order="717" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_CA0_CA4_MAP" spirit:order="718" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_CA5_CA9_MAP" spirit:order="719" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LADDR_CA10_CA15_MAP" spirit:order="720" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="721">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="722">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="723">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_REF_CMD_PERIOD" spirit:order="724" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="725">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="726">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_SBREF_ISSUE_PER" spirit:order="727" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="728">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="729">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="730">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="731">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="732">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="733">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_Q_AGE_LIMIT" spirit:order="734" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="735">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="736">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="737">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="738">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="739">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="740">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="741">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="742">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="743">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="744">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="745">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_COL_ADDR_LOW" spirit:order="746" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_COL_ADDR_HIGH" spirit:order="747" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_BA0_BA4_MAP" spirit:order="748" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_BA5_MAP" spirit:order="749" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_RA0_RA4_MAP" spirit:order="750" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_RA5_RA9_MAP" spirit:order="751" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_RA10_RA14_MAP" spirit:order="752" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_RA15_RA17_MAP" spirit:order="753" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_CA0_CA4_MAP" spirit:order="754" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_CA5_CA9_MAP" spirit:order="755" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LADDR_CA10_CA15_MAP" spirit:order="756" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="757">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="758">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="759">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_REF_CMD_PERIOD" spirit:order="760" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="761">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="762">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_SBREF_ISSUE_PER" spirit:order="763" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="764">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="765">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="766">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="767">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="768">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="769">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_Q_AGE_LIMIT" spirit:order="770" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="771">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="772">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="773">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="774">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="775">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="776">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="777">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="778">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="779">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="780">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="781">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_COL_ADDR_LOW" spirit:order="782" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_COL_ADDR_HIGH" spirit:order="783" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_BA0_BA4_MAP" spirit:order="784" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_BA5_MAP" spirit:order="785" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_RA0_RA4_MAP" spirit:order="786" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_RA5_RA9_MAP" spirit:order="787" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_RA10_RA14_MAP" spirit:order="788" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_RA15_RA17_MAP" spirit:order="789" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_CA0_CA4_MAP" spirit:order="790" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_CA5_CA9_MAP" spirit:order="791" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LADDR_CA10_CA15_MAP" spirit:order="792" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="793">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="794">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="795">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_REF_CMD_PERIOD" spirit:order="796" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="797">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="798">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_SBREF_ISSUE_PER" spirit:order="799" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="800">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="801">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="802">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="803">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="804">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="805">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_Q_AGE_LIMIT" spirit:order="806" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="807">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="808">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="809">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="810">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="811">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="812">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="813">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="814">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="815">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="816">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="817">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_COL_ADDR_LOW" spirit:order="818" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_COL_ADDR_HIGH" spirit:order="819" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_BA0_BA4_MAP" spirit:order="820" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_BA5_MAP" spirit:order="821" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_RA0_RA4_MAP" spirit:order="822" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_RA5_RA9_MAP" spirit:order="823" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_RA10_RA14_MAP" spirit:order="824" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_RA15_RA17_MAP" spirit:order="825" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_CA0_CA4_MAP" spirit:order="826" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_CA5_CA9_MAP" spirit:order="827" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LADDR_CA10_CA15_MAP" spirit:order="828" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="829">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="830">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="831">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_REF_CMD_PERIOD" spirit:order="832" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="833">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="834">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_SBREF_ISSUE_PER" spirit:order="835" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="836">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="837">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="838">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="839">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="840">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="841">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_Q_AGE_LIMIT" spirit:order="842" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="843">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="844">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="845">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="846">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="847">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="848">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="849">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="850">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="851">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="852">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="853">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_COL_ADDR_LOW" spirit:order="854" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_COL_ADDR_HIGH" spirit:order="855" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_BA0_BA4_MAP" spirit:order="856" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_BA5_MAP" spirit:order="857" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_RA0_RA4_MAP" spirit:order="858" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_RA5_RA9_MAP" spirit:order="859" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_RA10_RA14_MAP" spirit:order="860" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_RA15_RA17_MAP" spirit:order="861" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_CA0_CA4_MAP" spirit:order="862" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_CA5_CA9_MAP" spirit:order="863" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LADDR_CA10_CA15_MAP" spirit:order="864" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="865">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="866">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="867">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_REF_CMD_PERIOD" spirit:order="868" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="869">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="870">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_SBREF_ISSUE_PER" spirit:order="871" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="872">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="873">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="874">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="875">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="876">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="877">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_Q_AGE_LIMIT" spirit:order="878" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="879">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="880">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="881">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="882">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="883">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="884">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="885">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="886">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="887">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="888">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="889">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_COL_ADDR_LOW" spirit:order="890" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_COL_ADDR_HIGH" spirit:order="891" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_BA0_BA4_MAP" spirit:order="892" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_BA5_MAP" spirit:order="893" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_RA0_RA4_MAP" spirit:order="894" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_RA5_RA9_MAP" spirit:order="895" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_RA10_RA14_MAP" spirit:order="896" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_RA15_RA17_MAP" spirit:order="897" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_CA0_CA4_MAP" spirit:order="898" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_CA5_CA9_MAP" spirit:order="899" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LADDR_CA10_CA15_MAP" spirit:order="900" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="901">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="902">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="903">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_REF_CMD_PERIOD" spirit:order="904" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="905">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="906">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_SBREF_ISSUE_PER" spirit:order="907" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="908">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="909">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="910">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="911">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="912">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="913">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_Q_AGE_LIMIT" spirit:order="914" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="915">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="916">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="917">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="918">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="919">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="920">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="921">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="922">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="923">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="924">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="925">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_COL_ADDR_LOW" spirit:order="926" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_COL_ADDR_HIGH" spirit:order="927" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_BA0_BA4_MAP" spirit:order="928" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_BA5_MAP" spirit:order="929" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_RA0_RA4_MAP" spirit:order="930" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_RA5_RA9_MAP" spirit:order="931" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_RA10_RA14_MAP" spirit:order="932" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_RA15_RA17_MAP" spirit:order="933" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_CA0_CA4_MAP" spirit:order="934" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_CA5_CA9_MAP" spirit:order="935" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LADDR_CA10_CA15_MAP" spirit:order="936" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="937">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="938">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="939">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_REF_CMD_PERIOD" spirit:order="940" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="941">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="942">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_SBREF_ISSUE_PER" spirit:order="943" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="944">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="945">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="946">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="947">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="948">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="949">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_Q_AGE_LIMIT" spirit:order="950" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="951">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="952">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="953">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="954">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="955">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="956">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="957">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="958">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="959">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="960">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="961">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_COL_ADDR_LOW" spirit:order="962" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_COL_ADDR_HIGH" spirit:order="963" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_BA0_BA4_MAP" spirit:order="964" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_BA5_MAP" spirit:order="965" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_RA0_RA4_MAP" spirit:order="966" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_RA5_RA9_MAP" spirit:order="967" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_RA10_RA14_MAP" spirit:order="968" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_RA15_RA17_MAP" spirit:order="969" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_CA0_CA4_MAP" spirit:order="970" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_CA5_CA9_MAP" spirit:order="971" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LADDR_CA10_CA15_MAP" spirit:order="972" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="973">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="974">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="975">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_REF_CMD_PERIOD" spirit:order="976" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="977">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="978">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_SBREF_ISSUE_PER" spirit:order="979" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="980">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="981">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="982">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="983">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="984">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="985">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_Q_AGE_LIMIT" spirit:order="986" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="987">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="988">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="989">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="990">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="991">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="992">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="993">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="994">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="995">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="996">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="997">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_COL_ADDR_LOW" spirit:order="998" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_COL_ADDR_HIGH" spirit:order="999" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_BA0_BA4_MAP" spirit:order="1000" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_BA5_MAP" spirit:order="1001" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_RA0_RA4_MAP" spirit:order="1002" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_RA5_RA9_MAP" spirit:order="1003" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_RA10_RA14_MAP" spirit:order="1004" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_RA15_RA17_MAP" spirit:order="1005" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_CA0_CA4_MAP" spirit:order="1006" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_CA5_CA9_MAP" spirit:order="1007" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LADDR_CA10_CA15_MAP" spirit:order="1008" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1009">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1010">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1011">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_REF_CMD_PERIOD" spirit:order="1012" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1013">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1014">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_SBREF_ISSUE_PER" spirit:order="1015" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1016">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1017">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1018">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1019">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1020">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1021">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_Q_AGE_LIMIT" spirit:order="1022" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1023">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1024">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1025">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1026">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1027">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1028">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1029">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1030">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1031">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1032">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1033">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_COL_ADDR_LOW" spirit:order="1034" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_COL_ADDR_HIGH" spirit:order="1035" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_BA0_BA4_MAP" spirit:order="1036" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_BA5_MAP" spirit:order="1037" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_RA0_RA4_MAP" spirit:order="1038" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_RA5_RA9_MAP" spirit:order="1039" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_RA10_RA14_MAP" spirit:order="1040" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_RA15_RA17_MAP" spirit:order="1041" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_CA0_CA4_MAP" spirit:order="1042" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_CA5_CA9_MAP" spirit:order="1043" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LADDR_CA10_CA15_MAP" spirit:order="1044" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1045">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1046">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1047">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_REF_CMD_PERIOD" spirit:order="1048" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1049">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1050">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_SBREF_ISSUE_PER" spirit:order="1051" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1052">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1053">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1054">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1055">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1056">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1057">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_Q_AGE_LIMIT" spirit:order="1058" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1059">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1060">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1061">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1062">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1063">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1064">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1065">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1066">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_MANUAL_ADDR_MAP_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_MANUAL_ADDR_MAP_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1067">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_MANUAL_ADDR_MAP_SEL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_MANUAL_REFRESH_SEL</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_MANUAL_REFRESH_SEL" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1068">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_MANUAL_ADV_OPTIONS</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_MANUAL_ADV_OPTIONS" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1069">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_COL_ADDR_LOW</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_COL_ADDR_LOW" spirit:order="1070" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_COL_ADDR_HIGH</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_COL_ADDR_HIGH" spirit:order="1071" spirit:bitStringLength="4">0x4</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_BA0_BA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_BA0_BA4_MAP" spirit:order="1072" spirit:bitStringLength="32">0x00289207</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_BA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_BA5_MAP" spirit:order="1073" spirit:bitStringLength="6">0x05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_RA0_RA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_RA0_RA4_MAP" spirit:order="1074" spirit:bitStringLength="32">0x0f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_RA5_RA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_RA5_RA9_MAP" spirit:order="1075" spirit:bitStringLength="32">0x55134914</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_RA10_RA14_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_RA10_RA14_MAP" spirit:order="1076" spirit:bitStringLength="32">0x00061759</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_RA15_RA17_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_RA15_RA17_MAP" spirit:order="1077" spirit:bitStringLength="18">0x00000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_CA0_CA4_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_CA0_CA4_MAP" spirit:order="1078" spirit:bitStringLength="32">0x85103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_CA5_CA9_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_CA5_CA9_MAP" spirit:order="1079" spirit:bitStringLength="32">0x00000001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LADDR_CA10_CA15_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LADDR_CA10_CA15_MAP" spirit:order="1080" spirit:bitStringLength="32">0x00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_BG_INTERLEAVE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_BG_INTERLEAVE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1081">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_EN_TEMP_CTRL_REF_MODE</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_EN_TEMP_CTRL_REF_MODE" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1082">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_EN_TEMP_COMP_SF_PERIOD</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_EN_TEMP_COMP_SF_PERIOD" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1083">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_REF_CMD_PERIOD</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_REF_CMD_PERIOD" spirit:order="1084" spirit:bitStringLength="16">0x0DB6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_EN_SBREF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_EN_SBREF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1085">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_BURST_RW_REFRESH_HOLDOFF</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_BURST_RW_REFRESH_HOLDOFF" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1086">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_SBREF_ISSUE_PER</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_SBREF_ISSUE_PER" spirit:order="1087" spirit:bitStringLength="10">0x01e</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_SBREF_ISSUE_PER">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LOOKAHEAD_PCH</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LOOKAHEAD_PCH" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1088">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_LOOKAHEAD_ACT</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_LOOKAHEAD_ACT" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1089">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_REORDER_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_REORDER_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1090">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_REORDER_RW_ONLY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_REORDER_RW_ONLY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1091">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_REORDER_QUEUE_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_REORDER_QUEUE_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1092">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_MAINTAIN_COHERENCY</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_MAINTAIN_COHERENCY" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1093">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_Q_AGE_LIMIT</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_Q_AGE_LIMIT" spirit:order="1094" spirit:bitStringLength="7">0x7f</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_EN_DATA_MASK</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_EN_DATA_MASK" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1095">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_INIT_PERR_RETRY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_INIT_PERR_RETRY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1096">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_RD_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_RD_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1097">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_WR_DQ_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_WR_DQ_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1098">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_CA_PARITY_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_CA_PARITY_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1099">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_HBM_CB_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_HBM_CB_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1100">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_DM_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_DM_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1101">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_DM_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_RMW_EN</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_RMW_EN" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1102">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_RMW_EN">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_RA0_RA13_MAPPING" spirit:order="1103" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_CA0_CA5_MAP" spirit:order="1104" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_RA0_RA13_MAPPING" spirit:order="1105" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_CA0_CA5_MAP" spirit:order="1106" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_RA0_RA13_MAPPING" spirit:order="1107" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_CA0_CA5_MAP" spirit:order="1108" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_RA0_RA13_MAPPING" spirit:order="1109" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_CA0_CA5_MAP" spirit:order="1110" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_RA0_RA13_MAPPING" spirit:order="1111" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_CA0_CA5_MAP" spirit:order="1112" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_RA0_RA13_MAPPING" spirit:order="1113" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_CA0_CA5_MAP" spirit:order="1114" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_RA0_RA13_MAPPING" spirit:order="1115" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_CA0_CA5_MAP" spirit:order="1116" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_RA0_RA13_MAPPING" spirit:order="1117" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_CA0_CA5_MAP" spirit:order="1118" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_RA0_RA13_MAPPING" spirit:order="1119" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_CA0_CA5_MAP" spirit:order="1120" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_RA0_RA13_MAPPING" spirit:order="1121" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_CA0_CA5_MAP" spirit:order="1122" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_RA0_RA13_MAPPING" spirit:order="1123" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_CA0_CA5_MAP" spirit:order="1124" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_RA0_RA13_MAPPING" spirit:order="1125" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_CA0_CA5_MAP" spirit:order="1126" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_RA0_RA13_MAPPING" spirit:order="1127" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_CA0_CA5_MAP" spirit:order="1128" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_RA0_RA13_MAPPING" spirit:order="1129" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_CA0_CA5_MAP" spirit:order="1130" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_RA0_RA13_MAPPING" spirit:order="1131" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_CA0_CA5_MAP" spirit:order="1132" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_RA0_RA13_MAPPING</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_RA0_RA13_MAPPING" spirit:order="1133" spirit:bitStringLength="84">0x61759551349140f38d30b</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_CA0_CA5_MAP</spirit:name>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_CA0_CA5_MAP" spirit:order="1134" spirit:bitStringLength="36">0x185103080</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC0_ADDR_BIT</spirit:name>
      <spirit:displayName>MC0 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC0_ADDR_BIT" spirit:order="1135">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC0_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC1_ADDR_BIT</spirit:name>
      <spirit:displayName>MC1 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC1_ADDR_BIT" spirit:order="1136">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC1_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC2_ADDR_BIT</spirit:name>
      <spirit:displayName>MC2 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC2_ADDR_BIT" spirit:order="1137">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC2_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC3_ADDR_BIT</spirit:name>
      <spirit:displayName>MC2 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC3_ADDR_BIT" spirit:order="1138">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC3_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC4_ADDR_BIT</spirit:name>
      <spirit:displayName>MC4 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC4_ADDR_BIT" spirit:order="1139">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC4_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC5_ADDR_BIT</spirit:name>
      <spirit:displayName>MC5 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC5_ADDR_BIT" spirit:order="1140">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC5_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC6_ADDR_BIT</spirit:name>
      <spirit:displayName>MC6 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC6_ADDR_BIT" spirit:order="1141">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC6_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC7_ADDR_BIT</spirit:name>
      <spirit:displayName>MC7 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC7_ADDR_BIT" spirit:order="1142">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC7_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC8_ADDR_BIT</spirit:name>
      <spirit:displayName>MC8 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC8_ADDR_BIT" spirit:order="1143">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC8_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC9_ADDR_BIT</spirit:name>
      <spirit:displayName>MC9 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC9_ADDR_BIT" spirit:order="1144">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC9_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC10_ADDR_BIT</spirit:name>
      <spirit:displayName>MC10 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC10_ADDR_BIT" spirit:order="1145">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC10_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC11_ADDR_BIT</spirit:name>
      <spirit:displayName>MC11 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC11_ADDR_BIT" spirit:order="1146">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC11_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC12_ADDR_BIT</spirit:name>
      <spirit:displayName>MC12 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC12_ADDR_BIT" spirit:order="1147">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC12_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC13_ADDR_BIT</spirit:name>
      <spirit:displayName>MC13 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC13_ADDR_BIT" spirit:order="1148">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC13_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC14_ADDR_BIT</spirit:name>
      <spirit:displayName>MC14 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC14_ADDR_BIT" spirit:order="1149">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC14_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_MC15_ADDR_BIT</spirit:name>
      <spirit:displayName>MC15 Address Map</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_MC15_ADDR_BIT" spirit:order="1150">RA13,RA12,RA11,RA10,RA9,RA8,RA7,RA6,RA5,RA4,RA3,RA2,RA1,RA0,BG1,BG0,BA1,BA0,CA5,CA4,CA3,CA2,CA1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.USER_MC15_ADDR_BIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_00</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_00" spirit:order="1151">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_01</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_01" spirit:order="1152">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_02</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_02" spirit:order="1153">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_03</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_03" spirit:order="1154">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_04</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_04" spirit:order="1155">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_05</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_05" spirit:order="1156">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_06</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_06" spirit:order="1157">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_07</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_07" spirit:order="1158">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_08</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_08" spirit:order="1159">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_09</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_09" spirit:order="1160">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_10</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_10" spirit:order="1161">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_11</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_11" spirit:order="1162">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_12</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_12" spirit:order="1163">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_13</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_13" spirit:order="1164">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_14</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_14" spirit:order="1165">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_15</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_15" spirit:order="1166">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_16</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_16" spirit:order="1167">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_17</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_17" spirit:order="1168">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_18</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_18" spirit:order="1169">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_19</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_19" spirit:order="1170">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_20</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_20" spirit:order="1171">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_21</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_21" spirit:order="1172">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_22</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_22" spirit:order="1173">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_23</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_23" spirit:order="1174">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_24</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_24" spirit:order="1175">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_25</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_25" spirit:order="1176">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_26</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_26" spirit:order="1177">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_27</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_27" spirit:order="1178">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_28</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_28" spirit:order="1179">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_29</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_29" spirit:order="1180">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_30</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_30" spirit:order="1181">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_READ_PERCENT_31</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_READ_PERCENT_31" spirit:order="1182">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_00</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_00" spirit:order="1183">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_01</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_01" spirit:order="1184">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_02</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_02" spirit:order="1185">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_03</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_03" spirit:order="1186">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_04</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_04" spirit:order="1187">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_05</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_05" spirit:order="1188">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_06</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_06" spirit:order="1189">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_07</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_07" spirit:order="1190">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_08</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_08" spirit:order="1191">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_09</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_09" spirit:order="1192">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_10</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_10" spirit:order="1193">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_11</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_11" spirit:order="1194">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_12</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_12" spirit:order="1195">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_13</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_13" spirit:order="1196">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_14</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_14" spirit:order="1197">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_15</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_15" spirit:order="1198">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_16</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_16" spirit:order="1199">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_17</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_17" spirit:order="1200">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_18</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_18" spirit:order="1201">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_19</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_19" spirit:order="1202">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_20</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_20" spirit:order="1203">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_21</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_21" spirit:order="1204">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_22</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_22" spirit:order="1205">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_23</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_23" spirit:order="1206">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_24</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_24" spirit:order="1207">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_25</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_25" spirit:order="1208">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_26</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_26" spirit:order="1209">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_27</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_27" spirit:order="1210">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_28</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_28" spirit:order="1211">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_29</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_29" spirit:order="1212">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_30</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_30" spirit:order="1213">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_WRITE_PERCENT_31</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_WRITE_PERCENT_31" spirit:order="1214">40</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PAGEHIT_PERCENT_00</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PAGEHIT_PERCENT_00" spirit:order="1215">75</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PAGEHIT_PERCENT_01</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PAGEHIT_PERCENT_01" spirit:order="1216">75</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_00</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_00" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1217">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_01</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_01" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1218">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_02</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_02" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1219">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_03</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_03" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1220">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_04</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_04" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1221">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_05</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_05" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1222">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_06</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_06" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1223">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_07</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_07" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1224">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_08</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_08" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1225">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_09</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_09" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1226">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_10</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_10" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1227">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_11</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_11" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1228">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_12</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_12" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1229">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_13</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_13" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1230">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_14</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_14" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1231">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_15</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_15" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1232">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_16</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_16" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1233">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_17</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_17" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1234">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_18</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_18" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1235">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_19</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_19" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1236">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_20</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_20" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1237">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_21</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_21" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1238">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_22</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_22" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1239">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_23</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_23" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1240">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_24</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_24" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1241">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_25</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_25" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1242">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_26</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_26" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1243">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_27</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_27" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1244">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_28</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_28" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1245">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_29</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_29" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1246">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_30</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_30" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1247">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_SAXI_31</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_SAXI_31" spirit:choiceRef="choice_list_e42ba42f" spirit:order="1248">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_DFI_CLK0_FREQ</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_DFI_CLK0_FREQ" spirit:order="1249" spirit:minimum="6.25" spirit:maximum="450">450.000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_DFI_CLK1_FREQ</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_DFI_CLK1_FREQ" spirit:order="1250" spirit:minimum="6.25" spirit:maximum="450">450.000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_CLK_FREQ</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_CLK_FREQ" spirit:order="1251" spirit:minimum="225" spirit:maximum="450" spirit:rangeType="long">450</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK_FREQ</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK_FREQ" spirit:choiceRef="choice_list_4e874127" spirit:order="1252">100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK_NS</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK_NS" spirit:order="1253">10.000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK_PS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK_PS" spirit:order="1254">10000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK_XDC</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK_XDC" spirit:order="1255">10.000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>HBM_MMCM_FBOUT_MULT0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.HBM_MMCM_FBOUT_MULT0" spirit:order="1256">18</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>HBM_MMCM_CLKOUTDIV0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.HBM_MMCM_CLKOUTDIV0" spirit:order="1257">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>HBM_MMCM_DIVCLK_DIV0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.HBM_MMCM_DIVCLK_DIV0" spirit:order="1258">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_CLK1_FREQ</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_CLK1_FREQ" spirit:order="1259" spirit:minimum="225" spirit:maximum="450" spirit:rangeType="long">450</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK1_FREQ</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK1_FREQ" spirit:choiceRef="choice_list_4e874127" spirit:order="1260">100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK1_NS</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK1_NS" spirit:order="1261">10.000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK1_PS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK1_PS" spirit:order="1262">10000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_AXI_INPUT_CLK1_XDC</spirit:name>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.USER_AXI_INPUT_CLK1_XDC" spirit:order="1263">10.000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>HBM_MMCM1_FBOUT_MULT0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.HBM_MMCM1_FBOUT_MULT0" spirit:order="1264">18</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>HBM_MMCM1_CLKOUTDIV0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.HBM_MMCM1_CLKOUTDIV0" spirit:order="1265">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>HBM_MMCM1_DIVCLK_DIV0</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.HBM_MMCM1_DIVCLK_DIV0" spirit:order="1266">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_00</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_00" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1267">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_01</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_01" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1268">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_02</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_02" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1269">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_03</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_03" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1270">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_04</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_04" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1271">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_05</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_05" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1272">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_06</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_06" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1273">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_07</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_07" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1274">TRUE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_08</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_08" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1275">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_09</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_09" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1276">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_10</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_10" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1277">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_11</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_11" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1278">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_12</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_12" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1279">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_13</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_13" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1280">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_14</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_14" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1281">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_PHY_ENABLE_15</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_PHY_ENABLE_15" spirit:choiceRef="choice_list_e7c484ae" spirit:order="1282">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_CHAR_BOARD</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_CHAR_BOARD" spirit:choiceRef="choice_list_56638a14" spirit:order="1283">UC1899</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USER_EXAMPLE_TG</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.USER_EXAMPLE_TG" spirit:choiceRef="choice_list_09f2b396" spirit:order="1284">NON_SYNTHESIZABLE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="1">hbm_0</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:displayName>HBM IP</xilinx:displayName>
      <xilinx:xpmLibraries>
        <xilinx:xpmLibrary>XPM_MEMORY</xilinx:xpmLibrary>
      </xilinx:xpmLibraries>
      <xilinx:coreRevision>3</xilinx:coreRevision>
      <xilinx:configElementInfos>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_00.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_01.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_02.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_03.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_04.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_05.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_06.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_07.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_08.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_09.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_10.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_11.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_12.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_13.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_14.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_15.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_16.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_17.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_18.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_19.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_20.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_21.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_22.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_23.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_24.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_25.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_26.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_27.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_28.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_29.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_30.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.ADDR_WIDTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.ARUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.AWUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.BUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.DATA_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_BRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_BURST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_CACHE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_LOCK" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_PROT" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_QOS" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_REGION" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_RRESP" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.HAS_WSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.ID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.MAX_BURST_LENGTH" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.NUM_READ_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.NUM_WRITE_OUTSTANDING" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.PROTOCOL" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.READ_WRITE_MODE" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.RUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.SUPPORTS_NARROW_BURST" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.SAXI_31.WUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.HBM_MMCM_FBOUT_MULT0" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_AXI_CLK_FREQ" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_AXI_INPUT_CLK_FREQ" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_AXI_INPUT_CLK_NS" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_AXI_INPUT_CLK_PS" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_AXI_INPUT_CLK_XDC" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_CLK_SEL_LIST0" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC0_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC0_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC0_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC0_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC10_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC10_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC10_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC10_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC11_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC11_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC11_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC11_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC12_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC12_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC12_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC12_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC13_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC13_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC13_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC13_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC14_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC14_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC14_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC14_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC15_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC15_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC15_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC15_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC1_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC1_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC1_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC1_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC2_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC2_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC2_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC2_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC3_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC3_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC3_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC3_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC4_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC4_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC4_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC4_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC5_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC5_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC5_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC5_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC6_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC6_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC6_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC6_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC7_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC7_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC7_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC7_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC8_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC8_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC8_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC8_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC9_ADDR_BIT" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC9_CA0_CA5_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC9_LADDR_BA0_BA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_MC9_LADDR_CA0_CA4_MAP" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_01" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_02" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_03" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_04" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_05" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_06" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_07" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_08" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_09" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_10" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_11" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_12" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_13" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_14" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SAXI_15" xilinx:valueSource="user"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.USER_SWITCH_ENABLE_00" xilinx:valueSource="user"/>
      </xilinx:configElementInfos>
    </xilinx:coreExtensions>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2019.1</xilinx:xilinxVersion>
      <xilinx:checksum xilinx:scope="busInterfaces" xilinx:value="4743826d"/>
      <xilinx:checksum xilinx:scope="memoryMaps" xilinx:value="36ec238e"/>
      <xilinx:checksum xilinx:scope="fileGroups" xilinx:value="174feb0b"/>
      <xilinx:checksum xilinx:scope="ports" xilinx:value="82686fcc"/>
      <xilinx:checksum xilinx:scope="hdlParameters" xilinx:value="0ff86d2e"/>
      <xilinx:checksum xilinx:scope="parameters" xilinx:value="0f56855d"/>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
